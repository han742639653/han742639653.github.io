{"meta":{"title":"荒凉院子","subtitle":"","description":"","author":"韩 亮","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"Linux学习-3","slug":"Linux学习-3","date":"2022-10-17T06:45:22.000Z","updated":"2022-10-17T10:08:25.609Z","comments":true,"path":"2022/10/17/Linux学习-3/","link":"","permalink":"http://example.com/2022/10/17/Linux%E5%AD%A6%E4%B9%A0-3/","excerpt":"","text":"||win键+空格键 切换输入法 系统管理1 Linux中的进程和服务计算机中，一个正在执行的程序或命令，被叫“进程”（PID）、启动之后一直存在，常驻内存的进程，一般被称为服务 1.1 service服务管理（CentOS6 版本） 基本语法service 服务名 start| stop | restart |status（censtOS7 已经不使用） 查看服务的方法： /etc/init.d/服务名 pwd 查看当前路径 ls -al 查看文件 1234567(1) 查看网络服务的状态service network status(2) 停止网络服务service network stop(3) 启动网络服务 service network start(4) service network restart 1.2 chkconfig 设置后台服务的自启配置（CentOS 6版本） 基本语法 12345chkconfig --list 查看chkconfig (查看所有服务器自启配置)chkconfig 服务名 off （关掉指定服务的自动启动）chkconfig 服务名 on (开启指定服务的自动启动)chkconfig 服务名 --list (查看服务开机启动状态) 开启/关闭 network (网络)服务的自动启动 12chkconfig network onchkconfig network off 开启/关闭 network 服务指定级别的自动启动 12chkconfig --level 指定级别（0-5） network onchkconfig --level 指定级别（0-5） network off 1.3 systemctl(CentOS 7 版本) 基本语法systemctl start | stop| restart |status 服务名 查看方法 123# /usr/lib/systemd/system# pwd# ls -all 防火墙 12345678(1)查看防火墙服务的状态systemctl status firewalled(2)停止防火墙服务systemctl stop firewalled(3)启动防火墙服务systemctl start firewalled(4)重启防火墙服务systemctl restart firewalled 1.4 systemctl 设置后台服务的自启配置 基本语法 123456systemctl list-unit-files (查看服务开机启动状态)systemctl disable service_name (关掉指定服务的自动启动)systemctl enable service_name (开启指定服务的自动启动)--开启/关闭iptables（防火墙）服务的自动启动systemctl enable firewalld.servicesystemctl disable firewalld.service 1.5 系统的运行级别 运行级别 12345678910查看默认级别 vi/etc/inittabLinux系统有7种运行级别：常用的级别是3和5运行级别0：系统停机状态，系统默认运行级别不能设为0，否则不能正常启动运行级别1：单用户工作状态，root权限，用于系统维护，禁止远程登陆(安全模式)运行级别2：多用户状态（没有NFS），不支持网络运行级别3：完全的多用户状态（NFS）,登陆后进入控制台命令模式（黑框框）运行级别4：系统未使用，保留（一般不用）运行级别5：X11控制台，登陆后进入图像GUI模式运行级别6：系统正常关闭并重启，默认运行级别不能设为6，否则不能正常启动 CentOS7 的运行级别简化为： 1234567multi-user.target 等价于原运行级别3 （多用户有网， 无图形界面）graphical.target 等价于原运行级别5 （多用户有网,有图形界面）systemctl get-default（查看当前运行级别）修改当前运行级别systemctl set-default TARGET.target (这里TARGET取multi-user 或者 graphical) 1.6 关机重启命令 基本语法 – sync (将数据由内存同步到硬盘中) –halt （停机，关闭系统，但不断电） –poweroff（关机，断电） –reboot（重启 等同于 shutdown -r now） shutdown [选项] 时间 选项 功能 -H 相当 –halt，停机 -r -r=reboot 重启 now 立刻关机 时间 等待多久后关机 Linux 系统中为了提高磁盘的读写效率，对磁盘采取了 “预读迟写”操作方式。 当用户保存文件时，Linux 核心并不一定立即将保存数据写入物理磁盘中，而是将数据保存在缓冲区中，等缓冲区满时再写入磁盘，这种方式可以极大的提高磁盘写入数据的效率。 但是，也带来了安全隐患，如果数据还未写入磁盘时，系统掉电或者其他严重问题出现，则将导致数据丢失。 使用 sync 指令可以立即将缓冲区的数据写入磁盘。 123456789101112131415# sync (将数据由内存同步到硬盘中)# reboot(重启)# halt(停机，不停电)# shutdown -h 1 &#x27;This server will shutdown after 1 mins&#x27;(计算机将在1分钟后关机，并且会显示在登陆用户的当前屏幕)# shutdown -h now （立马关机，等同于poweroff# shutdown -r now (系统立马重启)# shutdown -c (取消关机)","categories":[],"tags":[]},{"title":"Linux学习-2","slug":"Linux学习-2","date":"2022-10-17T01:50:06.000Z","updated":"2022-10-17T02:54:33.771Z","comments":true,"path":"2022/10/17/Linux学习-2/","link":"","permalink":"http://example.com/2022/10/17/Linux%E5%AD%A6%E4%B9%A0-2/","excerpt":"","text":"vi/vim 编辑器VI是Unix操作系统和类Unix系统中最通用的文本编辑器VIM编辑器是从VI发展来的一个性能更为强大的文本编辑器。VIM与VI编辑器完全兼容 一般模式以 vi 打开一个档案就直接进入一般模式了（这是默认的模式）。一般模式中， 可使用『上下左右』按键来移动光标，可使用『删除字符』或『删除整行』来处理档案内容， 也可使用『复制、粘贴』来处理文件数据 常用语法 语法 功能描述 yy 复制光标当前一行 y 数字 y 复制一段 （从第几行到第几行） p 箭头移动到目的行粘贴 u 撤销上一步 dd 删除光标当前行 d 数字 d 删除光标（含）后多少行 x 剪切一个字母，相当于del X（大写） 剪切一个字母，相当于BackSpace yw 复制一个词 dw 删除一个词 shift+6（^） 移动到行头 shift+4($) 移动到行尾 1+shift+g 移动到页头，数字 shitf+g 移动到页尾 数字+shift+g 移动到目标行 编辑模式一般模式中可以进行删除、复制、粘贴等的动作，但是却无法编辑文件内容的！在按下『i, I, o, O, a, A』等任何一个字母之后才会进入编辑模式。通常在Linux中，按下这些按键时，在画面的左下方会出现『INSERT或REPLACE』的字样，此时才能进行编辑。而如果要回到一般模式时， 则必须要按下『Esc』这个按键即可退出编辑模式。 常用语法 语法 功能描述 i 当前光标后 a 当前光标前 o 当前光标行的下一行 I 光标所在行最前 A 光标所在行的最后 O 当前光标行的上一行 按『Esc』键 退出编辑模式，之后所在的模式为一般模式。 指令模式在一般模式当中，输入『 : / ?』3个中的任何一个按钮，就可以将光标移动到最底下那一行。在这个模式当中， 可以提供『搜寻资料』的动作，而读取、存盘、大量取代字符、离开 等 常用语法 语法 功能描述 :w 保存 :q 退出 :! 强制执行 /要查询的词 n查找下一个，N往上查找 :noth 取消高亮显示 :set nu 显示行号 :set nonu 关闭行号 :%s/old/new/g 替换内容 /g 替换匹配到的所有内容 模式转化","categories":[],"tags":[{"name":"自学","slug":"自学","permalink":"http://example.com/tags/%E8%87%AA%E5%AD%A6/"}]},{"title":"Linux学习_1","slug":"Linux学习-1","date":"2022-09-28T11:24:38.000Z","updated":"2022-10-17T01:44:09.334Z","comments":true,"path":"2022/09/28/Linux学习-1/","link":"","permalink":"http://example.com/2022/09/28/Linux%E5%AD%A6%E4%B9%A0-1/","excerpt":"","text":"学习目录 基础 linux安装 文件与目录结构 VI/VIM编辑器 网络配置 系统管理 远程登录 实战 文件目录类 时间日期类 用户管理类 文件权限类 磁盘分区类 进程线程类 扩展 软件包管理 克隆虚拟机 shell编程 1基于Centos7.9 Linux是一个操作系统（os）BSD（伯克利分校）（FreeBSD）（1993） Linux 发行版 Red Hat(性能强，稳定)（服务器系统首选） Red Hat Enterprise Linux 文件目录 /bin 是Binary的缩写，此目录存放最经常使用的命令 /sbin s就是Super User 存放系统管理员使用的系统管理程序 /home 存放普通用户的主目录，在liunx中每个用户都有一个自己的目录，一般该目录是以用户的账号命名的 /root 该目录为系统管理员，也称超级权限者的用户主目录 /lib 系统开机所需要最基本的动态连接共享库，类型于window系统的dll文件，几乎所有的应用程序都需要这些共享库 /lost+found 一般情况下这个目录是空的，当系统非法关机后，该目录就会存放一些文件 /etc 所有的系统管理所需要的配置文件和子目录 /usr 用户的很多应用程序和文件都放在这个目录下，类似于windows下program files目录 /boot 存放的是启动Liunx时使用的一些核心文件，包括一些连接文件以及镜像文件（自己的安装别放在这里） /proc 这个目录为虚拟目录，是系统内存的映射，可以通过直接访问这个目录来获取系统的信息 /srv service 缩写 该目录存放一些服务启动后需要提取的数据 /sys 这个Liunx2.6内核的一个很大变化，该目录下安装2.6内核中新出现的一个文件系统sysfs /tmp 存放一些临时文件 /dev 类似windows的设备管理器，把所有的硬件用文件的形式存储 /media(CentOS6) liunx系统会自动识别一些设备，如U盘，光驱等等，当识别后，liunx会把识别的设备挂载到这个目录下CentOS7 迁移到/run/media /mnt 系统提供该目录是为了让用户临时挂载别的文件系统的，可以将外部的存储挂载在/mnt/上，然后进入该目录就可以查看里的内容 /opt 这个给主机额外安装软件所存放的目录，如安装一个mysql就可以放到这个目录下，默认为空 /var 目录中存放不断扩充的东西，习惯性将那些经常被修改的目录放在其中。包括各种日志文件","categories":[],"tags":[{"name":"自学","slug":"自学","permalink":"http://example.com/tags/%E8%87%AA%E5%AD%A6/"}]},{"title":"Markdowm学习笔记","slug":"Markdowm学习笔记","date":"2022-09-28T06:31:30.000Z","updated":"2022-09-28T10:16:01.060Z","comments":true,"path":"2022/09/28/Markdowm学习笔记/","link":"","permalink":"http://example.com/2022/09/28/Markdowm%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","excerpt":"","text":"MarkDowm 基础1. 标题#号的个数代表标题的几级 一级标题使用一个#二级标题使用二个#号最多支持六级标题 2. 文字删除线(~~ )(前后各两个波浪号)~~(没啥用)~~ 删除线 ~~ 3. 斜体 文字(前后各一个*号) 4.加粗文字(前后各两个*号加粗) 5.斜体和加粗文字(前后三个*号) 6.下划线HTML语法文字(前后闭合)== == 7. 高亮1==***文字***==(vscode好像不能用) 8. 下标1H~2-o~2(~下标)（(vscode好像不能用)） 9.上标123456789101112131415平方米 m^2^（(vscode好像不能用)）````## 10.表情符号Emoji支持表情符号，可以使用系统默认的Emoji(windows不支持)也可以用图片的表情输出: 将出现智能提示## 11.表格使用 `|` 来分隔不同的单元格，使用`-`来分隔表头和其它行```markdownname | price--- | ---fried chicken | 19cola | 5 为了使Markdown更为清晰，| 和-两侧需要至少有一个空格（最左侧和右侧| 外就不需要了） name price friedchicken 19 cola 5 为了美观，可以使用空格对齐不同行的单元格，并在左右两侧都使用|来标记单元格边界，在表头下方的分隔线标记中加入:,即可标记下方的单元格内容的对齐方式： 1234|name | price ||:------------| :----: ||friedchicken | 19 ||cola | 5 | name price friedchicken 19 cola 5 12. 引用 “后悔”（估计用不上） 13. 列表无序列表 符号空格）123* 可以+ 可以- 可以 无序列表 无序 无序 有序列表 数字. 空格1231. 有序列表以数字和 . 开始2. 数字的序列并不影响生成的列表序列3. 但仍然推荐按照自然顺序（1,2,3...）编写 有序列表以数字和 . 开始 数字的序列并不影响生成的列表序列 但仍然推荐按照自然顺序（1,2,3…）编写 14 代码块代码块1```语言名称 123456789101112131415161718#include&lt;iostream&gt;class Solution&#123; public: int x,y; void add(int x,const );&#125;;void Solution::add(int x,int y)&#123; std::cout&lt;&lt;a+b&lt;&lt;std::endl;&#125;int main()&#123; Solution a; const int a=10,b=12; a.add(a,b); return &#125; 行内代码123也可以通过``插入行内代码（` 是 `Tab` 键上边，数字`1`左侧的按键） 15. 分隔线可以在一行中使用三个或更多的*,- 或者_来添加分隔线 123***------__________ 16. 跳转格式为[line text][link] 1[帮助文档][https://www.baidu.com] 17.自动连接使用&lt;&gt;包括的URL或邮箱地址会自动转换为超链接 12&lt;https://www.baidu.com&gt;&lt;123@gmail.com&gt; htpps:www.baidu.com &#x31;&#50;&#51;&#64;&#103;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#x6d; 18.图片123![图像名](图片地址或图片本地存储的路基)![美女](https://images.baidu.com/search/detail?ct=503316480&amp;z=0&amp;ipn=d&amp;word=%E5%8A%A8%E6%BC%AB&amp;step_word=&amp;hs=0&amp;pn=27&amp;spn=0&amp;di=7136437450519347201&amp;pi=0&amp;rn=1&amp;tn=baiduimagedetail&amp;is=0%2C0&amp;istype=2&amp;ie=utf-8&amp;oe=utf-8&amp;in=&amp;cl=2&amp;lm=-1&amp;st=-1&amp;cs=3820124795%2C828804674&amp;os=305612968%2C2325005128&amp;simid=3820124795%2C828804674&amp;adpicid=0&amp;lpn=0&amp;ln=1918&amp;fr=&amp;fmq=1664353996706_R&amp;fm=result&amp;ic=0&amp;s=undefined&amp;hd=&amp;latest=&amp;copyright=&amp;se=&amp;sme=&amp;tab=0&amp;width=&amp;height=&amp;face=undefined&amp;ist=&amp;jit=&amp;cg=&amp;bdtype=0&amp;oriquery=&amp;objurl=https%3A%2F%2Fgimg2.baidu.com%2Fimage_search%2Fsrc%3Dhttp%3A%2F%2Fpic1.win4000.com%2Fwallpaper%2F2020-07-15%2F5f0ecbb7a61e2.jpg%26refer%3Dhttp%3A%2F%2Fpic1.win4000.com%26app%3D2002%26size%3Df9999%2C10000%26q%3Da80%26n%3D0%26g%3D0n%26fmt%3Dauto%3Fsec%3D1666946001%26t%3D66b028325c022ad6711ff9ba6413302b&amp;fromurl=ippr_z2C%24qAzdH3FAzdH3Fooo_z%26e3Botg9aaa_z%26e3Bv54AzdH3Fowssrwrj6_1jpwts_80aln9_n_z%26e3Bip4s&amp;gsm=1d0000000000001d&amp;rpstart=0&amp;rpnum=0&amp;islist=&amp;querylist=&amp;nojc=undefined.jpg) 添加图片时，先安装 1npm install https://github.com/CodeFalling/hexo-asset-image --save 使用 hexo n 文件夹名（md文件同名，把图片文件都放入该文件下） 1![txt](3.jpg) 19.Markdowm画图（需要沟选扩展语法）","categories":[],"tags":[{"name":"自学","slug":"自学","permalink":"http://example.com/tags/%E8%87%AA%E5%AD%A6/"}]},{"title":"test_git","slug":"test-git","date":"2022-09-26T09:39:52.000Z","updated":"2022-09-28T11:38:38.283Z","comments":true,"path":"2022/09/26/test-git/","link":"","permalink":"http://example.com/2022/09/26/test-git/","excerpt":"","text":"自学开始","categories":[],"tags":[{"name":"测试","slug":"测试","permalink":"http://example.com/tags/%E6%B5%8B%E8%AF%95/"}]},{"title":"Hello World","slug":"hello-world","date":"2022-09-26T06:54:35.497Z","updated":"2022-09-23T09:30:32.569Z","comments":true,"path":"2022/09/26/hello-world/","link":"","permalink":"http://example.com/2022/09/26/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"自学","slug":"自学","permalink":"http://example.com/tags/%E8%87%AA%E5%AD%A6/"},{"name":"测试","slug":"测试","permalink":"http://example.com/tags/%E6%B5%8B%E8%AF%95/"}]}