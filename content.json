{"meta":{"title":"荒凉院子","subtitle":"","description":"","author":"韩 亮","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"Linux学习-7","slug":"Linux学习-7","date":"2022-10-19T03:28:31.000Z","updated":"2022-10-19T06:25:14.274Z","comments":true,"path":"2022/10/19/Linux学习-7/","link":"","permalink":"http://example.com/2022/10/19/Linux%E5%AD%A6%E4%B9%A0-7/","excerpt":"","text":"1. Linux 磁盘查看和分区类1.1 du 查看文件和目录占用的磁盘空间du: disk usage 磁盘占用情况 基本语法123456789101112du 目录/文件 （显示目录下每个子目录的磁盘使用情况）-h 以较易阅读的 GBytes, MBytes, KBytes 等格式自行-a 不仅查看子目录大小，还要包括文件-c 显示所有的文件和子目录大小后，显示总和-s 只显示总和--max-depth=n 指定统计子目录的深度为第 n 层---------du -sh (查看当前用户主目录占用的磁盘空间大小) 1.2 df 查看磁盘空间使用情况 df: disk free 空余磁盘 基本语法1234567891011121314df 选项 （列出文件系统的整体磁盘使用量，检查文件系统的磁盘空间占用情况）-h 以较易阅读的 GBytes, MBytes, KBytes 等格式自行显示df -h (查看磁盘使用情况)#### 1.3 lsblk 查看设备挂载情况- 基本语法lsblk （查看设备挂载情况）-f 查看详细的设备挂载情况，显示文件系统信息 1.4 mount/umount 挂载/卸载 对于Linux用户来讲，不论有几个分区，分别分给哪一个目录使用，它总归就是一个根目录、一个独立且唯一的文件结构。 Linux中每个分区都是用来组成整个文件系统的一部分，它在用一种叫做“挂载”的处理方法，它整个文件系统中包含了一整套的文件和目录，并将一个分区和一个目录联系起来，要载入的那个分区将使它的存储空间在这个目录下获得 挂载前准备（必须要有光盘或者已经连接镜像文件） 基本语法 123456789101112131415161718192021222324252627mount [-t vfstype] [-o options] device dir （挂载设备）umount 设备文件名或挂载点 （卸载设备)-t vfstype 指定文件系统的类型，通常不必指定。mount 会自动选择正确的类型。常用类型有： 光盘或光盘镜像：iso9660 DOS fat16 文件系统：msdos Windows 9x fat32 文件系统：vfat Windows NT ntfs 文件系统：ntfs Mount Windows 文件网络共享：smbfs UNIX(LINUX) 文件网络共享：nfs-o options 主要用来描述设备或档案的挂接方式。常用的参数有： loop：用来把一个文件当成硬盘分区挂接上系统 ro：采用只读方式挂接设备 rw：采用读写方式挂接设备 iocharset：指定访问文件系统所用字符集device 要挂接(mount)的设备dir 设备在系统上的挂接点(mount point)---------mkdir /mnt/cdrom (建立挂载点)mount -t iso9660 /dev/cdrom/mnt/cdrom (设备/dev/cdrom)(挂载光盘镜像文件)unmount /mnt/cdrom (卸载光盘镜像文件) 开机自动挂载 vi /etc/fstab 添加红框中内容，保存退出 1.5 fdisk 分区该命令必须在 root 用户下才能使用 基本语法12345678910111213141516171819fdisk -l （查看磁盘分区详情）fdisk 硬盘设备名 （对新增硬盘进行分区操作)-l 显示所有硬盘的分区列表（1）Linux 分区 Device：分区序列 Boot：引导 Start：从X磁柱开始 End：到Y磁柱结束 Blocks：容量 Id：分区类型ID System：分区类型（2）分区操作按键说明 m：显示命令列表 p：显示当前磁盘分区 n：新增分区 w：写入分区信息并退出 q：不保存分区信息直接退出","categories":[],"tags":[]},{"title":"Linux学习-6","slug":"Linux学习-6","date":"2022-10-18T08:08:01.000Z","updated":"2022-10-19T02:53:35.002Z","comments":true,"path":"2022/10/18/Linux学习-6/","link":"","permalink":"http://example.com/2022/10/18/Linux%E5%AD%A6%E4%B9%A0-6/","excerpt":"","text":"1. Linux 文件权限1.1 文件属性 Linux系统是一种典型的多用户系统，不同的用户处于不同的地位，拥有不同的权限。为了保护系统的安全性，Linux系统对不同的用户访问同一文件（包括目录文件）的权限做了不同的规定。 在Linux中我们可以使用ll或者ls -l命令来显示一个文件的属性以及文件所属的用户和组 如果没有权限，就会出现减号[ - ]而已。从左至右用0-9这些数字来表示: 1234567890 首位表示类型在Linux中第一个字符代表这个文件是目录、文件或链接文件等等- 代表文件d 代表目录l 链接文档(link file)- --------第1-3位确定属主（该文件的所有者）拥有该文件的权限。---User第4-6位确定属组（所有者的同组用户）拥有该文件的权限，---Group第7-9位确定其他用户拥有该文件的权限 ---Other rwx 作用文件和目录的不同解释 12345678910作用到文件：[ r ]代表可读(read): 可以读取，查看[ w ]代表可写(write): 可以修改，但是不代表可以删除该文件，删除一个文件的前提条件是对该文件所在的目录有写权限，才能删除该文件.[ x ]代表可执行(execute):可以被系统执行----- -----------作用到目录：[ r ]代表可读(read): 可以读取，ls查看目录内容[ w ]代表可写(write): 可以修改，目录内创建+删除+重命名目录[ x ]代表可执行(execute):可以进入该目录 如果查看到是文件：链接数指的是硬链接个数 如果查看的是文件夹：链接数指的是子文件夹个数 1.2 chmod 改变权限 基本语法12345678910111213141516chmod [&#123;ugoa&#125;&#123;+-=&#125;&#123;rwx&#125;] 文件或目录- --------chmod [mode=421]- -------u:所有者 g:所有组 o:其他人 a:所有人(u、g、o 的总和- -----r=4 w=2 x=1 rwx=4+2+1=7------------------------chmod u+x 3.txt （修改文件使其所属主用户具有执行权限）chmod g+x 3.txt (修改文件使其所属组用户具有执行权限)chmod u-x,o+x 3.txt (修改文件所属主用户执行权限,并使其他用户具有执行权限)chmod 777 3.txt (采用数字的方式，设置文件所有者、所属组、其他用户都具有可读可写可执行权限)chmod -R 777 new/ (修改整个文件夹里面的所有文件的所有者、所属组、其他用户都具有可读可写可执行权限) 1.3 chown 改变所有者 基本语法1234567chown [选项] [最终用户] [文件或目录] （改变文件或者目录的所有者）- -----R 递归操作-------------------chown newuser_1 3.txt (修改文件所有者)chown -R newuser_1 new/ (递归改变文件所有者和所有组) 1.4 chgrp 改变所属 基本语法123chgrp [最终用户组] [文件或目录] （改变文件或者目录的所属组）- ---------chgrp root 3.txt (修改文件的所属组) 2 搜索查找2.1 find 查找文件或者目录 find 指令将从指定目录向下递归地遍历其各个子目录，将满足条件的文件显示在终端 基本语法 12345678910111213141516171819find [搜索范围] [选项]选项说明-name&lt;查询方式&gt; 按照指定的文件名查找模式查找文件-user&lt;用户名&gt; 查找属于指定用户名所有文件-size&lt;文件大小&gt; 按照指定的文件大小查找文件,单位为: b —— 块（512 字节） c —— 字节 w —— 字（2 字节） k —— 千字节 M —— 兆字节 G —— 吉字节------------------------------------------------------------find new/ -name &quot;*.txt&quot; (按文件名：根据名称查找/目录下的filename.txt文件)find new/ -user newuser(查找/opt目录下，用户名称为-user的文件)find /home -size +204800(在/home目录下查找大于200m的文件（+n 大于 -n小于 n等于) 2.2 locate 快速定位文件路径 locate 指令利用事先建立的系统中所有文件名称及路径的 locate 数据库实现快速定位给定的文件。 Locate 指令无需遍历整个文件系统，查询速度较快。为了保证查询结果的准确度，管理员必须定期更新 locate 时刻。 基本语法 1234567locate 搜索文件- ----------由于 locate 指令基于数据库进行查询，所以第一次运行前，必须使用 updatedb 指令创建 locate 数据库-- ---------------------updatedblocate tmp(查询文件夹) 2.3 grep 过滤查找及“|”管道符 管道符，“|”，表示将前一个命令的处理结果输出传递给后面的命令处理 基本语法1234567grep 选项 查找内容 源文件-n 显示匹配行及行号- --------ls | grep -n test (查找某文件在第几行) 3. 压缩和解压类3.1 gzip/gunzip 压缩 基本语法 1234567891011gzip 文件 （压缩文件，只能将文件压缩为*.gz 文件）gunzip 文件.gz （解压缩文件命令）# -----------(1)只能压缩文件不能压缩目录（2）不保留原来的文件（3）同时多个文件会产生多个压缩包- ----------------gzip 3.txt (gzip压缩)gunzip 3.txt.gz (gunzip解压缩文件) 3.2 zip/unzip 压缩 基本语法 12345678910111213141516171819zip [选项] XXX.zip 将要压缩的内容 （压缩文件和目录的命令unzip [选项] XXX.zip （解压缩文件）-r 压缩目录-d&lt;目录&gt; 指定解压后文件的存放目录-----------zip 压缩命令在windows/linux都通用，可以压缩目录且保留源文件------zip new.zip 1.txt 2.txt(压缩 1.txt 和2.txt，压缩后的名称为new.zip)unzip new.zip(解压 new.zip)unzip new.zip -d /home (解压new.zip到指定目录-d) 3.3 tar 打包 基本语法 123456789101112131415161718192021tar [选项] XXX.tar.gz 将要打包进去的内容 （打包目录，压缩后的文件格式.tar.gz） -c 产生.tar 打包文件-v 显示详细信息-f 指定压缩后的文件名-z 打包同时压缩-x 解包.tar 文件-C 解压到指定目录- ------tar -zcvf new.tar.gz 1.txt 2.txt 3.txt(压缩多个文件)tar -zcvf mulu.tar.gz new/(压缩目录)tar -zxvf new.tar.gz(解压到当前目录)tar -zxvf new.tar.gz -C /home(解压到指定目录)","categories":[],"tags":[]},{"title":"Linux学习-5","slug":"Linux学习-5","date":"2022-10-18T06:51:17.000Z","updated":"2022-10-18T08:00:00.310Z","comments":true,"path":"2022/10/18/Linux学习-5/","link":"","permalink":"http://example.com/2022/10/18/Linux%E5%AD%A6%E4%B9%A0-5/","excerpt":"","text":"1.Linux 用户管理命令1.1 useradd 添加新用户 基本语法 12345678useradd 用户名 （添加新用户）useradd -g 组名 用户名 （添加新用户到某个组）-----------useradd newuserll /home/（添加一个用户） 1.2 passwd 设置用户密码 基本语法 123passwd 用户名 (设置用户密码)- ------------------passwd newuser (设置用户密码) 1.3 id 查看用户是否存在 基本语法 12id 用户名id newuser 1.4 cat /etc/passwd 查看创建了哪些用户cat /etc/passwd 1.5 su 切换用户su: swith user 切换用户 基本语法 1234567891011su 用户名称 （切换用户，只能获得用户的执行权限，不能获得环境变量）su - 用户名称 （切换到用户并获得该用户的环境变量及执行权限）-----------su newuserecho $PATHexit --------su -newuserecho $PATH 1.6 userdel 删除用户 基本语法 12345678910111213userdel 用户名 （删除用户但保存用户主目录）userdel -r 用户名 （用户和用户主目录，都删除)------r 删除用户的同时，删除与用户相关的所有文件- -----userdel newuserll /home/(除用户但保存用户主目录)userdel -r newuserll /home/(删除用户和用户主目录，都删除) 1.7 who 查看登录用户信息 基本语法 12whoami （显示自身用户名称）who am i （显示登录用户的用户名以及登陆时间 1.8 sudo 设置普通用户具有 root 权限 步骤 12345678910111213useradd newuser_1passwd newuser_1(添加 newuser_1 用户，并对其设置密码)vi /etc/sudoers(修改 /etc/sudoers 文件，找到下面一行(91 行)，在 root 下面添加一行)//## Allow root to run any commands anywhereroot ALL=(ALL) ALLatguigu ALL=(ALL) ALL(或者配置成采用 sudo 命令时，不需要输入密码)//## Allow root to run any commands anywhereroot ALL=(ALL) ALLatguigu ALL=(ALL) NOPASSWD:ALL修改完毕，现在可以用 newuser_1 帐号登录，然后用命令 sudo ，即可获得 root 权限进行操作 1.9 usermod 修改 基本语法 123456usermod -g 用户组-- 选项说明---g 修改用户的初始登录组，给定的组必须存在。默认组 id 是 1usermod -g root newuser_1(将用户加入到用户组) 2. 用户组管理命令每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。不同Linux 系统对用户组的规定有所不同，如Linux下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建。用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对/etc/group文件的更新 2.1 groupadd 新增组 基本语法123groupadd 组名groupadd newgroup (添加一个newgroup组) 2.2 groupdel 删除 基本语法1234groupdel 组名groupdel newgroup(删除newgroup组) 2.3 groupmod 修改组 基本语法1234groupmod -n 新组名 老组名-n&lt;新组名&gt; 指定工作组的新组名groupmod -n newgroup newgroup_1 2.4 cat /etc/group 查看创建了哪些组 cat /etc/group","categories":[],"tags":[]},{"title":"Linux学习-4","slug":"Linux学习-4","date":"2022-10-17T10:09:46.000Z","updated":"2022-10-18T08:04:39.113Z","comments":true,"path":"2022/10/17/Linux学习-4/","link":"","permalink":"http://example.com/2022/10/17/Linux%E5%AD%A6%E4%B9%A0-4/","excerpt":"","text":"//##(28) Linux 常用基本命令 Centos7 默认shell工具是bash 还有tcsh（不是默认的） 12ls -l /bin |grep sh详细查看bin目录下 带sh的命令 1 帮助命令1.1 man获得帮助信息 基本语法 man [命令或配置文件] (获取帮助信息) 信息 功能 NAME 命令的名称和单行描述 SYNOPSIS 怎样使用命令 DESCRIPTION 命令功能的深入讨论 EXAMPLES 怎么使用命令的例子 SEE ALSO 相关主题（手册页） 12man ls name(查看ls帮助信息) 1.2 help 获得shell内置命令的帮助信息一部分基础功能的系统命令是直接内嵌在 shell 中的，系统加载启动之后会随着 shell 一起加载，常驻系统内存中。这部分命令被称为“内置（built-in）命令”；相应的其它命令被称为“外部命令” 基本语法 help 命令 （获得shell内置命令的帮助信息）help cd (查看cd命令的帮助信息) 常用快捷键1234ctrl+c (停止进程)ctrl+i 清屏tab 提示上下键 查找执行过的命令 2 文件目录2.1 pwd 显示当前工作目录的绝对路径pwd 全称（print working directory） 打印工作目录 1pwd (显示当前工作目录的绝对路径) 2.2 ls列出目录的内容ls (list) 列出目录内容 基本语法 ls [选项] [目录或是文件] 选项说明 -a (全部文件，连通隐藏（开头为.的文件）一起列出来（常用）) -l (长数据串列出，包含 文件的属性和权限等等数据) 显示说明 每行列出的信息依次是： 文件类型与权限 链接数 文件属主 文件属组 文件大小用byte来表示 建立或最近修改的时间 名字 12ls -al (查看当前目录的所有内容信息) 2.3 cd 切换目录cd ： Change Directory 切换路径 基本语法 cd [参数] 参数说明 参数 功能 cd 绝对路径 切换路径 cd 相对路径 切换路径 cd ~ 或者 cd 回到自己的家目录 cd - 回到上一次所在的目录 cd .. 回到当前目录的上一级目录 cd -P 跳转到实际物理路径，而非快捷方式路径 12345cd /root/ (使用绝对路径切换到root目录)cd 公共的/ （使用相对路径切换到“公共的”目录）cd ~ （表示回到自己的家目录）cd - (回到上一次所在目录)cd .. (表示回到当前目录的上一级目录) 2.4 mkdir 创建一个新的目录mkdir:Make directory 建立目录 基本语法 mkdir [选项] 选项说明 -p 创建多层目录 1234567mkdir yicengmkdir yiceng/erceng(创建一个目录)mkdir -p yiceng/erceng/sanceng(创建一个多级目录) 2.5 rmdir 删除一个空的rmdir:Remove directory 移除目录 基本语法 rmdir 要删除的空目录 12rmdir yiceng/erceng/sanceng(删除一个空的文件夹) 2.6 touch 创建空文件 基本语法 touch 文件名称 1touch yiceng/erceng/sanceng/3.txt 2.7 cp 复制文件或目录 基本语法 cp [选项] source dest （复制source文件到dest） 选项说明 -r 递归复制整个文件夹 参数说明 source 源文件 dest 目标文件 123\\cp (强制覆盖不提示的方法)cp yiceng/erceng/sanceng/3.txt dest/new/ (复制文件)cp -r yiceng/erceng dest/new_1 (递归复制整个文件夹) 2.8 8 rm 删除文件或目录 基本语法 rm [选项] deleteFile （递归删除目录中所有内容) 选项说明 123456-r (递归删除目录中所有内容)-f (强制执行删除操作，而不提示用于进行确认)-v (显示指令的详细执行过程) --------------------------------rm yiceng/erceng/sanceng/3.txt (删除目录中的内容)rm -rf dest/new/ (递归删除目录中所有内容) 2.9 mv 移动文件与目录或重命名 基本语法 mv oldNameFile newNameFile （功能描述：重命名） mv /temp/movefile /targetFolder （功能描述：移动文件） 12mv yiceng/erceng/sanceng/3.txt yiceng/erceng/sanceng/3_1.txt (重命名)mv yiceng/dest/3.txt /new/new_1/ (移动文件) 2.10 cat 查看文件内容查看文件内容，从第一行开始显示 基本语法 cat [选项] 要查看的文件 选项说明 -n 显示所有行的行号，包括空行 一般查看比较小的文件，一屏幕能显示全的 cat -n 3.txt (查看文件内容并显示行号) 2.11 more 文件内容分屏查看器more 指令是一个基于 VI 编辑器的文本过滤器，它以全屏幕的方式按页显示文本文件的内容。more 指令中内置了若干快捷键 基本语法 more 要查看的 操作说明 1234567空白键 (space) 代表向下翻一页；Enter 代表向下翻『一行』；q 代表立刻离开 more ，不再显示该文件内容。Ctrl+F 向下滚动一屏Ctrl+B 返回上一屏= 输出当前行的行号:f 输出文件名和当前行的行号 2.12 less 分屏显示文件内容less 指令用来分屏查看文件内容，它的功能与 more 指令类似，但是比 more 指令更加强大，支持各种显示终端。less 指令在显示文件内容时，并不是一次将整个文件加载之后才显示，而是根据显示需要加载内容，对于显示大型文件具有较高的效率 基本语法 less 要查看的文件 操作说明 123456空白键 向下翻动一页；[pagedown] 向下翻动一页[pageup] 向上翻动一页；/字串 向下搜寻『字串』的功能；n：向下查找；N：向上查找；?字串 向上搜寻『字串』的功能；n：向上查找；N：向下查找；q 离开 less 用SecureCRT时[pagedown]和[pageup]可能会出现无法识别的问题 1less 3.txt (less 查看文件) 2.13 echo echo 输出内容到控制台 基本语法 echo [选项] 选项 -e 支持反斜线控制的字符转换 123456\\\\ 输出\\本身\\n 换行符\\t 制表符，也就是 Tab 键 --------------echo &quot;yiceng/3.txt&quot;echo -e &quot;yiceng/3.txt&quot; 2.14 head 显示文件头部内容head 用于显示文件的开头部分内容，默认情况下 head 指令显示文件的前 10 行内容 基本语法 head 文件 （查看文件头10行内容） head -n 5 文件 （查看文件头5行内容，5可以是任意行数 选项说明 -n&lt;行数&gt; 指定显示头部内容的行数 1head -n 2 3.txt 2.15 tail 输出文件尾部内容tail 用于输出文件中尾部的内容，默认情况下 tail 指令显示文件的后 10 行内容 基本语法 123tail 文件 （查看文件尾部10行内容）tail -n 5 文件 （查看文件尾部5行内容，5可以是任意行数）tail -f 文件 （实时追踪该文档的所有更新) 选项说明 123456-n&lt;行数&gt; 输出文件尾部 n 行内容-f 显示文件最新追加的内容，监视文件变化 --------------------------------- tail -n 3 3.txt (查看文件尾 3行内) tail -f 3.txt (实时追踪该档的所有更新) 2.16 &gt; 输出重定向和 &gt;&gt; 追加 （重点） 基本语法123456789ls -l &gt; 文件 （列表的内容写入文件 a.txt 中（覆盖写）ls -al &gt;&gt; 文件 （功能描述：列表的内容追加到文件 aa.txt 的末尾）cat 文件 1 &gt; 文件 2 （功能描述：将文件 1 的内容覆盖到文件 2）echo “内容” &gt;&gt; 文件-------------------ls -l&gt;3.txt (将 ls 查看信息写入到文件中)ls -l&gt;&gt;3.txt (将 ls 查看信息追)echo hello&gt;&gt;3.txt (采用 echo 将 hello 单词追加到文件中) 2.17 ln 软链 软链接也称为符号链接，类似于 windows 里的快捷方式，有自己的数据块，主要存放了链接其他文件的路径 基本语法 ln -s [原文件或目录] [软链接名] （给原文件创建一个软链接） 12345678910111213删除软链接： rm -rf 软链接名，而不是 rm -rf 软链接名/如果使用 rm -rf 软链接名/ 删除，会把软链接对应的真实目录下内容删掉查询：通过 ll 就可以查看，列表属性第 1 位是 l，尾部会有位置指向-------------------ln -s xiyou/3.txt ./new_1ll(查看软连接)rm -rf new_1 (删除软连接)ln -s source/de/ ./new_1cd -P new_1/ (进入软连接实际物理路径) 2.18 history 查看已经执行过历史命令 基本语法 history （查看已经执行过历史命令） 1history (查看已经执行过的历史命令) 3 时间日期类3.1 date 显示当前时间 基本语法 1234567891011date [OPTION]... [+FORMAT]选项说明-d&lt;时间字符串&gt; 显示指定的“时间字符串”表示的时间，而非当前时间-s&lt;日期时间&gt; 设置系统日期时间&lt;+日期时间格式&gt; 指定显示时使用的日期时间格式 -------------------（1）date （显示当前时间）（2）date +%Y （显示当前年份）（3）date +%m （显示当前月份）（4）date +%d （显示当前是哪一天）（5）date &quot;+%Y-%m-%d %H:%M:%S&quot; （显示年月日时分秒） 3.2 date 显示非当前时间 基本语法 12（1）date -d &#x27;1 days ago&#x27; （显示前一天时间）（2）date -d &#x27;-1 days ago&#x27; （显示明天时间 3.3 date 设置系统时间 基本语法12345date -s 字符串时间----------date -s &quot;2017-06-19 20:52（设置系统时间） 3.4 cal 查看日历 基本语法 cal [选项] （不加选项，显示本月日历) 选项说明1234具体某一年 显示这一年的日历cal (查看当前月的日历)cal 2017 (查看 2017 年的日历)","categories":[],"tags":[]},{"title":"Linux学习-3","slug":"Linux学习-3","date":"2022-10-17T06:45:22.000Z","updated":"2022-10-17T10:08:25.609Z","comments":true,"path":"2022/10/17/Linux学习-3/","link":"","permalink":"http://example.com/2022/10/17/Linux%E5%AD%A6%E4%B9%A0-3/","excerpt":"","text":"||win键+空格键 切换输入法 系统管理1 Linux中的进程和服务计算机中，一个正在执行的程序或命令，被叫“进程”（PID）、启动之后一直存在，常驻内存的进程，一般被称为服务 1.1 service服务管理（CentOS6 版本） 基本语法service 服务名 start| stop | restart |status（censtOS7 已经不使用） 查看服务的方法： /etc/init.d/服务名 pwd 查看当前路径 ls -al 查看文件 1234567(1) 查看网络服务的状态service network status(2) 停止网络服务service network stop(3) 启动网络服务 service network start(4) service network restart 1.2 chkconfig 设置后台服务的自启配置（CentOS 6版本） 基本语法 12345chkconfig --list 查看chkconfig (查看所有服务器自启配置)chkconfig 服务名 off （关掉指定服务的自动启动）chkconfig 服务名 on (开启指定服务的自动启动)chkconfig 服务名 --list (查看服务开机启动状态) 开启/关闭 network (网络)服务的自动启动 12chkconfig network onchkconfig network off 开启/关闭 network 服务指定级别的自动启动 12chkconfig --level 指定级别（0-5） network onchkconfig --level 指定级别（0-5） network off 1.3 systemctl(CentOS 7 版本) 基本语法systemctl start | stop| restart |status 服务名 查看方法 123# /usr/lib/systemd/system# pwd# ls -all 防火墙 12345678(1)查看防火墙服务的状态systemctl status firewalled(2)停止防火墙服务systemctl stop firewalled(3)启动防火墙服务systemctl start firewalled(4)重启防火墙服务systemctl restart firewalled 1.4 systemctl 设置后台服务的自启配置 基本语法 123456systemctl list-unit-files (查看服务开机启动状态)systemctl disable service_name (关掉指定服务的自动启动)systemctl enable service_name (开启指定服务的自动启动)--开启/关闭iptables（防火墙）服务的自动启动systemctl enable firewalld.servicesystemctl disable firewalld.service 1.5 系统的运行级别 运行级别 12345678910查看默认级别 vi/etc/inittabLinux系统有7种运行级别：常用的级别是3和5运行级别0：系统停机状态，系统默认运行级别不能设为0，否则不能正常启动运行级别1：单用户工作状态，root权限，用于系统维护，禁止远程登陆(安全模式)运行级别2：多用户状态（没有NFS），不支持网络运行级别3：完全的多用户状态（NFS）,登陆后进入控制台命令模式（黑框框）运行级别4：系统未使用，保留（一般不用）运行级别5：X11控制台，登陆后进入图像GUI模式运行级别6：系统正常关闭并重启，默认运行级别不能设为6，否则不能正常启动 CentOS7 的运行级别简化为： 1234567multi-user.target 等价于原运行级别3 （多用户有网， 无图形界面）graphical.target 等价于原运行级别5 （多用户有网,有图形界面）systemctl get-default（查看当前运行级别）修改当前运行级别systemctl set-default TARGET.target (这里TARGET取multi-user 或者 graphical) 1.6 关机重启命令 基本语法 – sync (将数据由内存同步到硬盘中) –halt （停机，关闭系统，但不断电） –poweroff（关机，断电） –reboot（重启 等同于 shutdown -r now） shutdown [选项] 时间 选项 功能 -H 相当 –halt，停机 -r -r=reboot 重启 now 立刻关机 时间 等待多久后关机 Linux 系统中为了提高磁盘的读写效率，对磁盘采取了 “预读迟写”操作方式。 当用户保存文件时，Linux 核心并不一定立即将保存数据写入物理磁盘中，而是将数据保存在缓冲区中，等缓冲区满时再写入磁盘，这种方式可以极大的提高磁盘写入数据的效率。 但是，也带来了安全隐患，如果数据还未写入磁盘时，系统掉电或者其他严重问题出现，则将导致数据丢失。 使用 sync 指令可以立即将缓冲区的数据写入磁盘。 123456789101112131415# sync (将数据由内存同步到硬盘中)# reboot(重启)# halt(停机，不停电)# shutdown -h 1 &#x27;This server will shutdown after 1 mins&#x27;(计算机将在1分钟后关机，并且会显示在登陆用户的当前屏幕)# shutdown -h now （立马关机，等同于poweroff# shutdown -r now (系统立马重启)# shutdown -c (取消关机)","categories":[],"tags":[]},{"title":"Linux学习-2","slug":"Linux学习-2","date":"2022-10-17T01:50:06.000Z","updated":"2022-10-17T02:54:33.771Z","comments":true,"path":"2022/10/17/Linux学习-2/","link":"","permalink":"http://example.com/2022/10/17/Linux%E5%AD%A6%E4%B9%A0-2/","excerpt":"","text":"vi/vim 编辑器VI是Unix操作系统和类Unix系统中最通用的文本编辑器VIM编辑器是从VI发展来的一个性能更为强大的文本编辑器。VIM与VI编辑器完全兼容 一般模式以 vi 打开一个档案就直接进入一般模式了（这是默认的模式）。一般模式中， 可使用『上下左右』按键来移动光标，可使用『删除字符』或『删除整行』来处理档案内容， 也可使用『复制、粘贴』来处理文件数据 常用语法 语法 功能描述 yy 复制光标当前一行 y 数字 y 复制一段 （从第几行到第几行） p 箭头移动到目的行粘贴 u 撤销上一步 dd 删除光标当前行 d 数字 d 删除光标（含）后多少行 x 剪切一个字母，相当于del X（大写） 剪切一个字母，相当于BackSpace yw 复制一个词 dw 删除一个词 shift+6（^） 移动到行头 shift+4($) 移动到行尾 1+shift+g 移动到页头，数字 shitf+g 移动到页尾 数字+shift+g 移动到目标行 编辑模式一般模式中可以进行删除、复制、粘贴等的动作，但是却无法编辑文件内容的！在按下『i, I, o, O, a, A』等任何一个字母之后才会进入编辑模式。通常在Linux中，按下这些按键时，在画面的左下方会出现『INSERT或REPLACE』的字样，此时才能进行编辑。而如果要回到一般模式时， 则必须要按下『Esc』这个按键即可退出编辑模式。 常用语法 语法 功能描述 i 当前光标后 a 当前光标前 o 当前光标行的下一行 I 光标所在行最前 A 光标所在行的最后 O 当前光标行的上一行 按『Esc』键 退出编辑模式，之后所在的模式为一般模式。 指令模式在一般模式当中，输入『 : / ?』3个中的任何一个按钮，就可以将光标移动到最底下那一行。在这个模式当中， 可以提供『搜寻资料』的动作，而读取、存盘、大量取代字符、离开 等 常用语法 语法 功能描述 :w 保存 :q 退出 :! 强制执行 /要查询的词 n查找下一个，N往上查找 :noth 取消高亮显示 :set nu 显示行号 :set nonu 关闭行号 :%s/old/new/g 替换内容 /g 替换匹配到的所有内容 模式转化","categories":[],"tags":[{"name":"自学","slug":"自学","permalink":"http://example.com/tags/%E8%87%AA%E5%AD%A6/"}]},{"title":"Linux学习_1","slug":"Linux学习-1","date":"2022-09-28T11:24:38.000Z","updated":"2022-10-17T01:44:09.334Z","comments":true,"path":"2022/09/28/Linux学习-1/","link":"","permalink":"http://example.com/2022/09/28/Linux%E5%AD%A6%E4%B9%A0-1/","excerpt":"","text":"学习目录 基础 linux安装 文件与目录结构 VI/VIM编辑器 网络配置 系统管理 远程登录 实战 文件目录类 时间日期类 用户管理类 文件权限类 磁盘分区类 进程线程类 扩展 软件包管理 克隆虚拟机 shell编程 1基于Centos7.9 Linux是一个操作系统（os）BSD（伯克利分校）（FreeBSD）（1993） Linux 发行版 Red Hat(性能强，稳定)（服务器系统首选） Red Hat Enterprise Linux 文件目录 /bin 是Binary的缩写，此目录存放最经常使用的命令 /sbin s就是Super User 存放系统管理员使用的系统管理程序 /home 存放普通用户的主目录，在liunx中每个用户都有一个自己的目录，一般该目录是以用户的账号命名的 /root 该目录为系统管理员，也称超级权限者的用户主目录 /lib 系统开机所需要最基本的动态连接共享库，类型于window系统的dll文件，几乎所有的应用程序都需要这些共享库 /lost+found 一般情况下这个目录是空的，当系统非法关机后，该目录就会存放一些文件 /etc 所有的系统管理所需要的配置文件和子目录 /usr 用户的很多应用程序和文件都放在这个目录下，类似于windows下program files目录 /boot 存放的是启动Liunx时使用的一些核心文件，包括一些连接文件以及镜像文件（自己的安装别放在这里） /proc 这个目录为虚拟目录，是系统内存的映射，可以通过直接访问这个目录来获取系统的信息 /srv service 缩写 该目录存放一些服务启动后需要提取的数据 /sys 这个Liunx2.6内核的一个很大变化，该目录下安装2.6内核中新出现的一个文件系统sysfs /tmp 存放一些临时文件 /dev 类似windows的设备管理器，把所有的硬件用文件的形式存储 /media(CentOS6) liunx系统会自动识别一些设备，如U盘，光驱等等，当识别后，liunx会把识别的设备挂载到这个目录下CentOS7 迁移到/run/media /mnt 系统提供该目录是为了让用户临时挂载别的文件系统的，可以将外部的存储挂载在/mnt/上，然后进入该目录就可以查看里的内容 /opt 这个给主机额外安装软件所存放的目录，如安装一个mysql就可以放到这个目录下，默认为空 /var 目录中存放不断扩充的东西，习惯性将那些经常被修改的目录放在其中。包括各种日志文件","categories":[],"tags":[{"name":"自学","slug":"自学","permalink":"http://example.com/tags/%E8%87%AA%E5%AD%A6/"}]},{"title":"Markdowm学习笔记","slug":"Markdowm学习笔记","date":"2022-09-28T06:31:30.000Z","updated":"2022-09-28T10:16:01.060Z","comments":true,"path":"2022/09/28/Markdowm学习笔记/","link":"","permalink":"http://example.com/2022/09/28/Markdowm%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","excerpt":"","text":"MarkDowm 基础1. 标题#号的个数代表标题的几级 一级标题使用一个#二级标题使用二个#号最多支持六级标题 2. 文字删除线(~~ )(前后各两个波浪号)~~(没啥用)~~ 删除线 ~~ 3. 斜体 文字(前后各一个*号) 4.加粗文字(前后各两个*号加粗) 5.斜体和加粗文字(前后三个*号) 6.下划线HTML语法文字(前后闭合)== == 7. 高亮1==***文字***==(vscode好像不能用) 8. 下标1H~2-o~2(~下标)（(vscode好像不能用)） 9.上标123456789101112131415平方米 m^2^（(vscode好像不能用)）````## 10.表情符号Emoji支持表情符号，可以使用系统默认的Emoji(windows不支持)也可以用图片的表情输出: 将出现智能提示## 11.表格使用 `|` 来分隔不同的单元格，使用`-`来分隔表头和其它行```markdownname | price--- | ---fried chicken | 19cola | 5 为了使Markdown更为清晰，| 和-两侧需要至少有一个空格（最左侧和右侧| 外就不需要了） name price friedchicken 19 cola 5 为了美观，可以使用空格对齐不同行的单元格，并在左右两侧都使用|来标记单元格边界，在表头下方的分隔线标记中加入:,即可标记下方的单元格内容的对齐方式： 1234|name | price ||:------------| :----: ||friedchicken | 19 ||cola | 5 | name price friedchicken 19 cola 5 12. 引用 “后悔”（估计用不上） 13. 列表无序列表 符号空格）123* 可以+ 可以- 可以 无序列表 无序 无序 有序列表 数字. 空格1231. 有序列表以数字和 . 开始2. 数字的序列并不影响生成的列表序列3. 但仍然推荐按照自然顺序（1,2,3...）编写 有序列表以数字和 . 开始 数字的序列并不影响生成的列表序列 但仍然推荐按照自然顺序（1,2,3…）编写 14 代码块代码块1```语言名称 123456789101112131415161718#include&lt;iostream&gt;class Solution&#123; public: int x,y; void add(int x,const );&#125;;void Solution::add(int x,int y)&#123; std::cout&lt;&lt;a+b&lt;&lt;std::endl;&#125;int main()&#123; Solution a; const int a=10,b=12; a.add(a,b); return &#125; 行内代码123也可以通过``插入行内代码（` 是 `Tab` 键上边，数字`1`左侧的按键） 15. 分隔线可以在一行中使用三个或更多的*,- 或者_来添加分隔线 123***------__________ 16. 跳转格式为[line text][link] 1[帮助文档][https://www.baidu.com] 17.自动连接使用&lt;&gt;包括的URL或邮箱地址会自动转换为超链接 12&lt;https://www.baidu.com&gt;&lt;123@gmail.com&gt; htpps:www.baidu.com &#x31;&#50;&#51;&#64;&#103;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#x6d; 18.图片123![图像名](图片地址或图片本地存储的路基)![美女](https://images.baidu.com/search/detail?ct=503316480&amp;z=0&amp;ipn=d&amp;word=%E5%8A%A8%E6%BC%AB&amp;step_word=&amp;hs=0&amp;pn=27&amp;spn=0&amp;di=7136437450519347201&amp;pi=0&amp;rn=1&amp;tn=baiduimagedetail&amp;is=0%2C0&amp;istype=2&amp;ie=utf-8&amp;oe=utf-8&amp;in=&amp;cl=2&amp;lm=-1&amp;st=-1&amp;cs=3820124795%2C828804674&amp;os=305612968%2C2325005128&amp;simid=3820124795%2C828804674&amp;adpicid=0&amp;lpn=0&amp;ln=1918&amp;fr=&amp;fmq=1664353996706_R&amp;fm=result&amp;ic=0&amp;s=undefined&amp;hd=&amp;latest=&amp;copyright=&amp;se=&amp;sme=&amp;tab=0&amp;width=&amp;height=&amp;face=undefined&amp;ist=&amp;jit=&amp;cg=&amp;bdtype=0&amp;oriquery=&amp;objurl=https%3A%2F%2Fgimg2.baidu.com%2Fimage_search%2Fsrc%3Dhttp%3A%2F%2Fpic1.win4000.com%2Fwallpaper%2F2020-07-15%2F5f0ecbb7a61e2.jpg%26refer%3Dhttp%3A%2F%2Fpic1.win4000.com%26app%3D2002%26size%3Df9999%2C10000%26q%3Da80%26n%3D0%26g%3D0n%26fmt%3Dauto%3Fsec%3D1666946001%26t%3D66b028325c022ad6711ff9ba6413302b&amp;fromurl=ippr_z2C%24qAzdH3FAzdH3Fooo_z%26e3Botg9aaa_z%26e3Bv54AzdH3Fowssrwrj6_1jpwts_80aln9_n_z%26e3Bip4s&amp;gsm=1d0000000000001d&amp;rpstart=0&amp;rpnum=0&amp;islist=&amp;querylist=&amp;nojc=undefined.jpg) 添加图片时，先安装 1npm install https://github.com/CodeFalling/hexo-asset-image --save 使用 hexo n 文件夹名（md文件同名，把图片文件都放入该文件下） 1![txt](3.jpg) 19.Markdowm画图（需要沟选扩展语法）","categories":[],"tags":[{"name":"自学","slug":"自学","permalink":"http://example.com/tags/%E8%87%AA%E5%AD%A6/"}]},{"title":"test_git","slug":"test-git","date":"2022-09-26T09:39:52.000Z","updated":"2022-09-28T11:38:38.283Z","comments":true,"path":"2022/09/26/test-git/","link":"","permalink":"http://example.com/2022/09/26/test-git/","excerpt":"","text":"自学开始","categories":[],"tags":[{"name":"测试","slug":"测试","permalink":"http://example.com/tags/%E6%B5%8B%E8%AF%95/"}]},{"title":"Hello World","slug":"hello-world","date":"2022-09-26T06:54:35.497Z","updated":"2022-09-23T09:30:32.569Z","comments":true,"path":"2022/09/26/hello-world/","link":"","permalink":"http://example.com/2022/09/26/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"自学","slug":"自学","permalink":"http://example.com/tags/%E8%87%AA%E5%AD%A6/"},{"name":"测试","slug":"测试","permalink":"http://example.com/tags/%E6%B5%8B%E8%AF%95/"}]}