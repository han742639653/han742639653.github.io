[{"title":"c++读取txt","date":"2024-01-10T02:43:46.000Z","url":"/2024/01/10/c-%E8%AF%BB%E5%8F%96txt/","categories":[["undefined",""]],"content":"直接读取参数的txt文件 上代码 "},{"title":"cycleGan环境配置","date":"2024-01-04T02:03:58.000Z","url":"/2024/01/04/cycleGan%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/","categories":[["undefined",""]],"content":"查看nvidia显存 和cuda版本 安装pytorch 需要注意的地方 配置python 虚拟环境 venv创建虚拟环境(python3自带) virtualenvwrapper创建虚拟环境 pip 升级(针对升级pip报错) python 换国内源 cyclegan 一些调试参数"},{"title":"GAN学习笔记1","date":"2023-12-30T02:14:51.000Z","url":"/2023/12/30/GAN%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/","categories":[["undefined",""]],"content":"GAN（生成对抗网络）是一类用于生成模型的神经网络模型，它由生成器和判别器两个部分组成。下面是一些常见的GAN网络模型： 原始的GAN（GAN, Generative Adversarial Network）：由Ian Goodfellow等人于2014年提出的最早的GAN模型。 DCGAN（Deep Convolutional GAN）：在原始GAN的基础上，引入了卷积神经网络结构，适用于图像生成任务。 CGAN（Conditional GAN）：在GAN中加入条件信息，使得生成器能够根据给定条件生成符合要求的样本。 WGAN（Wasserstein GAN）：采用Wasserstein距离作为损失函数，解决了GAN训练过程中的模式崩溃和不稳定性问题。 CycleGAN：用于图像转换任务，可以实现不同领域之间的图像转换，如马到斑马、苹果到橙子等。 Pix2Pix：用于图像翻译任务，将输入图像转换为输出图像，如黑白照片到彩色照片、草图到真实图像等。 StyleGAN（Style-Generative Adversarial Network）：通过学习图像的风格和内容分离的方式，实现高分辨率图像的生成。 这些仅是GAN模型中的一部分，随着研究的深入和发展，还有许多其他的GAN变体和改进模型。 CycleGAN 是一种基于生成对抗网络（GAN）的图像转换模型。它的主要目标是实现两个不同领域之间的图像转换，而无需成对的训练数据。 CycleGAN 的用途非常广泛，以下是一些常见的应用场景： 风格迁移：CycleGAN 可以将一种风格的图像转换为另一种风格，例如将油画风格的图像转换为真实照片风格，或者将夏季风格的图像转换为冬季风格的图像。 图像翻译：CycleGAN 可以在不同语义领域之间进行图像转换，例如将马的图像转换为斑马的图像，将苹果的图像转换为橘子的图像等。 动漫风格转换：CycleGAN 可以将真实照片转换为动漫风格的图像，或者将动漫风格的图像转换为真实照片风格，实现动漫化效果。 图像增强和修复：CycleGAN 可以将低质量图像转换为高质量图像，或者将有缺陷的图像修复为完整的图像。 跨摄影设备转换：CycleGAN 可以将一种摄影设备拍摄的图像转换为另一种摄影设备的图像，例如将手机拍摄的图像转换为单反相机拍摄的图像。 需要注意的是，CycleGAN 模型的训练过程可能需要大量的数据和计算资源。此外，模型的性能也受到训练数据的质量和多样性的影响。因此，在实际使用中，需要根据具体任务和数据情况进行适当的调整和优化。 "},{"title":"raw文件的保存和读取处理","date":"2023-12-21T07:54:39.000Z","url":"/2023/12/21/raw%E6%96%87%E4%BB%B6%E7%9A%84%E4%BF%9D%E5%AD%98%E5%92%8C%E8%AF%BB%E5%8F%96%E5%A4%84%E7%90%86/","categories":[["undefined",""]]},{"title":"提示和总结","date":"2023-12-21T02:23:00.000Z","url":"/2023/12/21/%E6%8F%90%E7%A4%BA%E5%92%8C%E6%80%BB%E7%BB%93/","categories":[["undefined",""]],"content":"重搞一下热像仪数据采集的工具，不能用8位的编解码的数据用16位数据来处理的，8位效果实在太差的，后续需要从图像重建的方式上来提升图像，强反光需要拉低阈值来处理的 抽时间把年终总结写一下的和对明年规划"},{"title":"c++继承","date":"2023-11-20T01:44:40.000Z","url":"/2023/11/20/c-%E7%BB%A7%E6%89%BF/","categories":[["undefined",""]],"content":"c++ 继承在C++中，继承是一种面向对象编程的重要概念，它允许一个类（称为派生类）从另一个类（称为基类）那里继承属性（数据）和行为（方法）。这使得代码重用变得更加容易，并且有助于建立层次化的类关系。 上述代码中Rectangle 类通过 public 关键字继承了 Shape 类。这意味着 Rectangle 类可以访问 Shape 类中的 setWidth 和 setHeight 方法，可以通过继承的数据成员 width 和 height 计算矩形的面积。 继承还可以分为不同的类型，比如公有继承、私有继承和保护继承，它们决定了派生类对基类成员的访问权限。此外，C++ 还提供了虚继承和多重继承等高级特性，以满足更复杂的类关系需求。 多重继承多重继承指的是一个派生类同时继承自多个基类。这种特性使得派生类可以获得多个基类的属性和行为，从而支持更加丰富的类关系 上述代码中Rectangle 类同时继承自 Shape 和 Color 两个基类，因此Rectangle可以使用这两个基类中定义的方法和数据成员。 虚继承虚继承用于解决多重继承可能引发的菱形继承问题（Diamond Inheritance Problem）。通过虚继承，可以确保在多重继承中共享的基类子对象只有一个实例。以下是一个简单的示例： 在这个示例中，Bat 类同时继承自 Mammal 和 Bird 两个基类，而这两个基类都虚继承自 Animal。这样就避免了由于多重继承而导致的 Animal 类对象在 Bat 对象中出现多份的问题。"},{"title":"QT_信号和槽","date":"2023-11-17T09:26:45.000Z","url":"/2023/11/17/QT-%E4%BF%A1%E5%8F%B7%E5%92%8C%E6%A7%BD/","categories":[["undefined",""]],"content":"信号和槽信号槽是 Qt 框架引以为豪的机制之一。实际就是观察者模式。当某个事件发生之后，比如，按钮检测到自己被点击了一下，它就会发出一个信号（signal）。这种发出是没有目的的，类似广播。如果有对象对这个信号感兴趣，它就会使用连接（connect）函数，意思是，用自己的一个函数（成为槽（slot））来处理这个信号。也就是说，当信号发出时，被连接的槽函数会自动被回调。这就类似观察者模式：当发生了感兴趣的事件，某一个操作就会被自动触发。（这里提一句，Qt 的信号槽使用了额外的处理来实现，并不是 GoF 经典的观察者模式的实现方式。） 1观察者模式是一种行为设计模式，它定义了对象之间的一对多依赖关系，当一个对象的状态发生变化时，所有依赖它的对象都会得到通知并自动更新。以下是根据Gang of Four（GoF）经典的观察者模式实现的方式： Subject（目标）：目标维护一组观察者，并提供方法来增加、删除和通知观察者。 "},{"title":"“总结（2023/11/17）”","date":"2023-11-17T07:07:20.000Z","url":"/2023/11/17/%E2%80%9C%E6%80%BB%E7%BB%93%EF%BC%882023-11-17%EF%BC%89%E2%80%9D/","categories":[["undefined",""]],"content":"工作总结熟悉华景康SDK调用的。 QLable 显示图像 和绘制ROI 大体代码完成，后续还需要修改， 温度的提取和显示也完成 温度数据（点，线 ，圆，矩形）保存csv文件 下周计划完成csv温度数据显示和处理界面（包括原始数据界面显示，降温变化率曲线和拟合曲线，能量）看有时间把QT学一下的（MFC）和（C#）也估计得了解一下"},{"title":"‘图像算法一些思路’","date":"2023-11-08T06:22:25.000Z","url":"/2023/11/08/%E2%80%98%E5%9B%BE%E5%83%8F%E7%AE%97%E6%B3%95%E4%B8%80%E4%BA%9B%E6%80%9D%E8%B7%AF%E2%80%99/","categories":[["undefined",""]],"content":"去除图像中光斑得一些思路 "},{"title":"test-m","date":"2023-11-08T06:12:02.000Z","url":"/2023/11/08/test-m/","categories":[["undefined",""]],"content":"用来测试hexo blog 日志的"},{"title":"多线程","date":"2023-06-30T02:58:53.000Z","url":"/2023/06/30/%E5%A4%9A%E7%BA%BF%E7%A8%8B/","categories":[["undefined",""]],"content":"面临的业务（多线程处理相机的发送图像） 互斥锁 "},{"title":"QT初学-1","date":"2023-05-11T01:45:10.000Z","url":"/2023/05/11/QT%E5%88%9D%E5%AD%A6-1/","categories":[["undefined",""]],"content":" QT常用的API 提高的按钮的生命周期 信号和槽"},{"title":"分水岭算法","date":"2023-05-04T07:19:46.000Z","url":"/2023/05/04/%E5%88%86%E6%B0%B4%E5%B2%AD%E7%AE%97%E6%B3%95/","categories":[["undefined",""]]},{"title":"激光束基本概念","date":"2023-04-04T08:46:04.000Z","url":"/2023/04/04/%E6%BF%80%E5%85%89%E6%9D%9F%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/","categories":[["undefined",""]],"content":"1激光发散角是指激光束从激光器中发出后，扩散的角度。一般来说，激光束在传输过程中会由于大气折射、光学元件不完美等因素而扩散。激光发散角越小，表示激光束的能量越集中，适用于需要精细加工或远距离通信等场合；相反，激光发散角越大，表示激光束的能量分布越广泛，适用于需要覆盖面积较大的照明或投影等场合 2激光脉冲宽度是指激光器输出的脉冲持续时间。通常情况下，激光的脉冲宽度非常短，一般在纳秒（ns）或皮秒（ps）级别。激光脉冲宽度的长短对于激光在各种应用领域中的行为和性能具有至关重要的影响。例如，在激光打印机中，短脉冲宽度可使打印速度更快且印刷质量更高；在激光医疗设备中，短脉冲宽度可以精确控制激光能量的输送，从而避免对周围组织的损伤。需要注意的是，不同应用领域对激光脉冲宽度的要求也会有所差异。 3激光束波长是指激光器发出的激光波长。激光的波长通常在可见光、红外线或紫外线范围内，并且不同类型的激光器具有不同的波长范围。例如，二氧化碳激光器的波长为10.6微米，用于切割和焊接材料；Nd:YAG激光器的波长为1.064微米，用于医疗、通信和制造等领域；半导体激光器的波长范围从近红外到蓝紫色，用于信息存储、显示和照明等应用。激光波长的选择取决于具体应用的需求以及所使用的材料。 4激光照射宽度是指激光束在目标表面上的照射直径。激光束的照射宽度与激光器的发散角度、透镜系统等因素有关。通常情况下，激光照射宽度可以通过适当设计光学系统来控制和调整，以满足不同应用场景的需要。例如，在激光切割和焊接过程中，需要控制激光束的照射宽度和能量密度，以确保材料切割或焊接的质量和效率；在激光医疗领域，需要控制激光照射宽度和能量密度，以避免对周围组织的伤害。因此，在不同的应用场景中，激光照射宽度和能量密度的选择非常重要 5激光照射宽度的计算公式主要涉及激光束发散角、透镜的焦距以及目标距离等因素。以下是一个简单的计算公式：w = 2 * f * tan(θ/2) 直接拿上面公式计算其中，w为激光束在目标表面上的照射直径，f为透镜的焦距，θ为激光束的发散角。 需要注意的是，这个公式只是一个近似值，实际计算时还需要考虑其他因素的影响，例如激光束在传输过程中的衰减、大气折射等。因此，在实际应用中，最好根据具体情况进行现场测试和调整。"},{"title":"图像形状特征","date":"2023-03-29T08:33:27.000Z","url":"/2023/03/29/%E5%9B%BE%E5%83%8F%E5%BD%A2%E7%8A%B6%E7%89%B9%E5%BE%81/","categories":[["undefined",""]],"content":"常见的图像形状特征包括： 轮廓面积：物体轮廓的面积，可以用来表示物体的大小。矩：可以通过轮廓计算得到，用于描述物体的几何形状、面积、重心等特征。离心率：表示物体轮廓的长短轴比，用于描述物体的形状。形状因子：是指一个用来描述物体形状的无量纲量，可以用来区分不同形状的物体。椭圆度：物体轮廓与椭圆的匹配度，可以用来描述物体的形状。连通性：描述物体轮廓是否是连通的，可以用来区分不同的物体。轮廓长度：物体轮廓的长度，可以用来表示物体的周长。凸包：描述物体轮廓的最小凸多边形，可以用来表示物体的形状。等高线：用于描述物体轮廓的等高线曲线，可以用来表示物体的形状。方向直方图：描述物体轮廓的方向分布，可以用于物体识别和分类。"},{"title":"c++简单面试题","date":"2023-03-28T02:12:53.000Z","url":"/2023/03/28/c-%E7%AE%80%E5%8D%95%E9%9D%A2%E8%AF%95%E9%A2%98/","categories":[["undefined",""]],"content":"记录问题 char，short，int，double ,float ，long各占几个字节 虚函数和纯虚函数？ 重载函数和重载操作符 指针的大小 类指针和指针类 菱形继承vs安装从高版本2022安装vs2010 版本向下兼容 "},{"title":"eigen矩阵取子矩阵","date":"2023-03-07T02:51:00.000Z","url":"/2023/03/07/eigen%E7%9F%A9%E9%98%B5%E5%8F%96%E5%AD%90%E7%9F%A9%E9%98%B5/","tags":[["eigen","/tags/eigen/"]],"categories":[["undefined",""]],"content":"子矩阵操作"},{"title":"二维数组转为eigen中矩阵","date":"2023-03-07T01:14:51.000Z","url":"/2023/03/07/%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E8%BD%AC%E4%B8%BAeigen%E4%B8%AD%E7%9F%A9%E9%98%B5/","categories":[["undefined",""]],"content":"eigen 学习笔记MatrixXd 二维数组转为eigen的matrixXd 矩阵"},{"title":"回归分析","date":"2023-02-28T06:44:34.000Z","url":"/2023/02/28/%E7%BA%BF%E6%80%A7%E5%88%86%E6%9E%90/","categories":[["undefined",""]],"content":"回归分析 相关分析是研究两个或两个以上的变量之间相关程度及大小的一种统计方法回归分析是寻找存在相关关系的变量间的数学表达式，并进行统计推断的一种统计方法 对回归分析进行分类，主要： 回归分析的一般步骤（大致上） 一元线性回归分析 x：自变量，y：因变量 对具有线性关系的两个变量，可以用一个表达式（方程）来表达它们之间的线性关系 描述：因变量y与自变量x和误差e 的表达式成 回归方程 只涉及到一个自变量x的一元线性回归模型为：y=a1+a2x+e a1 为截距，a2 为斜率 e 为误差项，反应除x和y之间线性关系之外随机因素对y的影响 根据对一元线性回归模型的假设，得到其回归方程：E(y)=a1+a2x 当回归方程的参数已知，对于给定x值，利用回归方程就能计算y的期望值 用样本统计量代替回归方程的未知参数，就得到估计的回归方程，简称回归直线 参数的最小二乘法估计 对于回归直线，关键在于求解参数，常用最小二乘法，是使因变量y和估计值之间的离差平方达到最小求解 "},{"title":"visdom远程启动","date":"2023-02-16T09:32:29.000Z","url":"/2023/02/16/visdom%E8%BF%9C%E7%A8%8B%E5%90%AF%E5%8A%A8/","categories":[["undefined",""]],"content":"pytracking 配置问题（1）服务器远程连接 ssh 连接服务器 visdom 启动 本地访问服务器可视化visdom "},{"title":"opencl-笔记1","date":"2023-01-30T08:39:03.000Z","url":"/2023/01/30/opencl-%E7%AC%94%E8%AE%B01/","categories":[["undefined",""]],"content":"1.安装vcpkg在Windows下开发C++程序时，Vcpkg是一个命令行包管理工具，极大地简化三方库的获取、安装、使用和部署流程。"},{"title":"c++笔记","date":"2023-01-29T08:21:02.000Z","url":"/2023/01/29/c-%E7%AC%94%E8%AE%B0/","categories":[["undefined",""]],"content":"c++ 高性能服务器 ####log.h 智能指针多态性和虚函数内存分配内存对齐"},{"title":"知识图谱","date":"2022-11-16T06:45:09.000Z","url":"/2022/11/16/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/","categories":[["undefined",""]],"content":"知识图谱知识图谱旨在利用图结构建模，识别和推断事物之间的复杂关联关系和沉淀领域知识，是实现认知智能的重要基石，已经被广泛应用于搜索引擎，智能问答，语言语义理解，大数据决策分析，智能物联等众多领域。 知识图谱技术源于互联网，最早+ "},{"title":"微信小程序-6","date":"2022-11-16T06:42:19.000Z","url":"/2022/11/16/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-6/","categories":[["undefined",""]],"content":"1. 条件渲染在小程序中，使用wx:if=”“来判断是否需要渲染该代码块："},{"title":"微信小程序-5","date":"2022-11-15T07:32:45.000Z","url":"/2022/11/15/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-5/","categories":[["undefined",""]],"content":"WXML 模板语法1.数据绑定 把data中的数据绑定到页面中渲染，使用Mustache语法将变量包起来即可。语法格式为： 实际代码 1.1 Mustache 语法的应用场景 绑定内容 绑定属性 运算(三元运算，算术运算) 三元运算 算数运算 事件绑定事件是渲染层到逻辑层的通讯方式。通过事件可以将用户在渲染层产生的行为，反馈到逻辑层进行业务处理。 事件对象的属性列表当事件回调触发的时候，会收到一个事件对象event： target和currentTarget的区别 点击内部按钮时，点击事件以冒泡的方式向外扩散，也会触发外层view的tap事件处理函数。 对于外层view: e.target指向的是触发事件的源头组件,因此,e.target是内部的按钮组件 e.currentTarget指向的是当前正在触发事件的那个组件，因此,e.currentTarge是当前view组件 bindtap 的语法格式在小程序，不存在HTML中的onclick鼠标点击事件，是通过tap事件来响应用户的触摸行为。 在事件处理函数中为data中的数据赋值 事件传参 bindinput 的语法格式 实现文本框和data之间的数据同步 "},{"title":"微信小程序-4","date":"2022-11-14T09:54:57.000Z","url":"/2022/11/14/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-4/","categories":[["undefined",""]],"content":"小程序API小程序API调用微信提供的能力，如获取用户信息，本地存储，支付功能 协调工作要求干啥就干啥 小程序发布上线一般经过上传代码-&gt;审核代码-&gt;发布 上传代码 登陆小程序管理后台-&gt;管理-&gt;版本管理-&gt;开发版本，即可以查看上传版本 为了保证小程序的质量，以及符合相关规定，小程序的发布是需要经过腾讯官网审核的。 发布审核通过后，管理员的微信中会收到小程序通过审核的通知，在审核版本的列表中，点击“发布”按钮，即可把“审核通过”的版本发布为“线上版本”，供所有小程序用户访问和使用 获取小程序码登陆小程序管理后台-&gt;设置-&gt;基本设置-&gt;基本信息-&gt;小程序码及线下物料下载 查看运营数据"},{"title":"微信小程序-3","date":"2022-11-14T01:57:15.000Z","url":"/2022/11/14/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-3/","categories":[["undefined",""]],"content":"1.小程序中组件的分类 1.1 常用的视图容器类组件 view list.wxml list.wxss scroll-view list.wxml list.wxcs swiper和swiper-item 1.2 view组件的使用 1.3 Scroll-view 组件使用 1.4 swiper和swiper-item组件的基本使用 list.wxml list.wxcs 1.5 swiper 组件的常用属性 1.6 基础内容组件text rich-text 1.6.1 text组件的使用通过text 组件的selectable属性，实现长按选中文本内容效果： 1.6.2 rich-text 组件的使用通过rich-text组件的nodes属性节点，把HTML字符串渲染为对应的UI结构 1.7 其他常用组件 button image navigator 1.7.1 button 按钮使用 1.7.2 image组件的基本使用 1.7.3 image组件mode属性image组件的mode属性用来指定图片的裁剪和缩放模式，常用mode属性值如下： "},{"title":"微信小程序-2","date":"2022-11-12T08:25:36.000Z","url":"/2022/11/12/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-2/","categories":[["undefined",""]],"content":"小程序的宿主环境宿主环境 小程序宿主环境包含的内容 通信模型1. 通信的主体 2.小程序的通信模型 3.小程序运行机制3.1 小程序启动过程 3.2 页面渲染的过程"},{"title":"微信小程序-1","date":"2022-11-11T08:11:17.000Z","url":"/2022/11/11/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-1/","categories":[["undefined",""]],"content":"微信小程序微信小程序运行在微信环境中，有自己的一套标准开发模式 index存放索引log 存放日志其中，每个页面由4个基本文件组成，分别是：.js文件（页面的脚本文件，存放页面的数据，事件处理函数等）.json文件（当前页面的配置文件，配置窗口的外观，表现等）.wxml文件（页面的模板结构文件）（标签）.wxss文件（当前页面的样式表文件） JSON是一种数据格式，在实际开发中，JSON总以配置文件的形式出现，通过不同的.json配置文件，可以对小程序项目进行不同级别的配置。小程序项目中由4种json配置文件项目根目录的app.json配置文件项目根目录种project.config.json配置文件项目根目录种的sitemap.json配置文件每个页面文件夹中的.json配置文件 app.json是当前小程序的全局配置，包括小程序的所有页面路径，窗口外观，界面表现，底部tab等在项目中app.json配置：pages：用来记录当前小程序所有页面的路径window：全局定义小程序所有页面的背景色，文字颜色等style:全局定义小程序组件所使用的样式版本sitemapLocation：用来指明sitemap.json的位置 project.config.json 是项目配置文件,小程序开发工具的个性化配置 setting中保存了编译相关的配置projectname中保存的是项目名称appid保存的小程序的账号ID 微信已开放小程序内搜索，类似PC网页的SEO，sitemap.json文件来配置小程序页面是否允许微信索引。当允许微信索引时，微信会通过爬虫的形式，为小程序的页面建立索引，当用户的搜素关键字和页面的索引匹配成功时，小程序的页面将可能展示在搜素结果中。 sitemap的索引提示是默认开启，如需要关闭sitemap的索引提示，可在小程序项目配置文件project.config.json 的setting 中配置字段checkSiteMap为false。如果没有，手动添加 “checkSiteMap”: true, 小程序中每个页面，可以使用.json文件来对本页面的窗口外观配置，页面中的配置项会覆盖app.json的window中相同的配置项。eg.在pages目录下的index,json中添加 “navigationBarBackgroundColor”: “#00FA9A”当全局配置与页面配置冲突时，以页面配置为主 在app.json-&gt;pages中新增页面的存放路径，小程序开发者工具可帮助自动创建对应的页面文件 eg：在pages项中添加 “pages/list/list” 只要调整app.json-&gt;pages 数组中页面路径的前后顺序，即可修改项目首页。小程序会把排在第一位的页面，当作项目首页进行渲染 WXML(WeiXin Markup Language)是小程序框架设计的一套标签语言，用来构建小程序页面的结构，其作用类似于网页开发中HTML。WXML与HTML的区别标签不同HTML (div(布局),sapn（文本）,img,a（行跳转）)WXML(view（布局）,text（文本）,image,navigator)属性节点不同 提供了类似Vue中的模板语法 数据绑定列表渲染条件渲染 WXCC(WeiXin Style Sheets)是一套样式语言，用于描述WXML的组件样式，类似于网页开发中css。WXSS和CSS区别：新增了rpx尺寸单位CSS中需要手动进行像素单位换算，例如remWxss在底层支持新的尺寸单位rpx，在不同大小的屏幕上小程序会自动进行换算。 提供了全局的样式和局部样式项目中根目录app.wxss会作用于所有小程序页面局部页面的.wxss样式仅对当前页面生效 WXss仅支持部分CSS选择器.class 和#idelement并集选择器，后代选择器::after和::before等伪类选择器 一个项目仅仅提供界面展示是不够的，在小程序中，通过.js文件来处理用户的操作。eg:响应用户的点击，获取用户的位置等JS文件分成三大类：app.js 是整个小程序项目的入口文件，通过调用APP()函数来启动整个小程序页面的.js文件 是页面的入口文件，通过调用Page（）函数来创建并运行页面 普通的.js文件 是普通的功能模块文件，用来封装公共的函数或属性供页面使用```"},{"title":"makefile-笔记","date":"2022-10-24T06:33:16.000Z","url":"/2022/10/24/makefile-%E7%AC%94%E8%AE%B0/","categories":[["undefined",""]],"content":"{1.快速编译基础，2.生成多个程序的Makefile 3. 生成驱动模块的Makefile} 1. 快速编译基础makefile生成可执行程序 - make脚本生成多个可执行文件 make 工程管理器，也称“自动编译管理器” 读入Makefile文件编辑内容来执行具体编译工作 根据文件时间戳自动发现更新过的文件 只编译改动的代码文件，而不用完全编译 由make工具创建的目标体（target），通常是目标文件或可执行文件 要创建的目标体所依赖的文件（dependency_file） 创建每个目标体时需要运行的命令(command) 命令行前面必须是一个“TAB键”，否则编译错误为：***missing sepaeator.Stop Makefile 变量Make允许在Makefile中创建和使用变量，变量在Makefile中定义的一些名字，用来替代一个文本字符串，该文本字符串称为该变量的值 用户自定义变量/预定义变量/自动变量/环境变量 例如 src= fun1.c fun2.c 自定义变量： 其值由用户自行设定，（变量的值可以用来代替目标体，依赖文件，命令以及Makefile文件中的其他部分） 两种方式 递归展开方式 简单扩展方式 自动变量：用于代表编译语句中出现的目标文件和依赖文件，具有本地含义 预定义变量：预先定义的常见编译器，汇编器的名称及编译选项 make clean make 隐含规则 嵌套的makefile案例 改进后的makefile make 工具使用参数 2 . 生成多个程序的Makefile all:server client //(all 来说明将生成的可执行程序/目标) 3 生成驱动模块的Makefile 升级版 "},{"title":"c++笔记-1","date":"2022-10-22T01:41:48.000Z","url":"/2022/10/22/c-%E7%AC%94%E8%AE%B0-1/","categories":[["undefined",""]],"content":"系统性能靠offload（）代码质量靠Clang() Q1 如果现在重写muduo 会改那些设计？ Q2 Muduo 原来是用std::function 相当于多态。现在是否可以用concept 和 template来减少性能开销？ FFmpeg 硬件加速 Q3 商业的代码检查工具 c++后端(音视频)```markdown c++ 1.c/c++ stl（vector，list，map，set，hashmap，iterator….） c++新特性 (lamda 智能指针) 2. Linux （epoll （网络协议（tcp/udp））服务器操作系统 ） （系统调用） (shell,gcc/g++/gdb,makefile,cmake,vscode (常识))) （Linux系统为应用开发提供哪些功能？） （cpu 0 占用率高 ？ （htop/top）） 当占用率100%，陷入死循环 ，加入条件等待 cpu1/cpu2 做cpu的亲缘性 8.软技能 unix环境高级编程 深度 -&gt;核心技能广度 -&gt; "},{"title":"tx2笔记-1","date":"2022-10-20T03:08:28.000Z","url":"/2022/10/20/tx2%E7%AC%94%E8%AE%B0-1/","categories":[["undefined",""]],"content":"TX2网络配置 关键的参数一定要拼写正确 重启网络服务 route 修改DNS 网络配置常用的查询命令 简单心得 "},{"title":"Linux学习-9","date":"2022-10-19T07:33:38.000Z","url":"/2022/10/19/Linux%E5%AD%A6%E4%B9%A0-9/","categories":[["undefined",""]],"content":"Linux 软件包管理1 RPMRPM（RedHat Package Manager），RedHat软件包管理工具，类似windows里面的setup.exe是Linux这系列操作系统里面的打包安装工具，它虽然是RedHat的标志，但理念是通用的。RPM包的名称格式Apache-1.3.23-11.i386.rpm “apache” 软件名称 “1.3.23-11”软件的版本号，主版本和此版本 “i386”是软件所运行的硬件平台，Intel 32位处理器的统称 “rpm”文件扩展名，代表RPM包 1.1 RPM 查询命令（rpm -qa） 基本语法 1.3 RPM 安装命令 基本语法 2 YUMYUM（全称为 Yellow dog Updater, Modified）是一个在 Fedora 和 RedHat 以及 CentOS中的 Shell 前端软件包管理器。基于 RPM 包管理，能够从指定的服务器自动下载 RPM 包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装 2.1 YUM 的常用命令 基本语法 2.2 修改网络 YUM 源 默认的系统 YUM 源，需要连接国外 apache 网站，网速比较慢，可以修改关联的网络YUM 源为国内镜像的网站，比如网易 163,aliyun 等 "},{"title":"Linux学习-8","date":"2022-10-19T06:32:40.000Z","url":"/2022/10/19/Linux%E5%AD%A6%E4%B9%A0-8/","categories":[["undefined",""]],"content":"1. Linux 进程管理进程是正在执行的一个程序或命令，每一个进程都是一个运行的实体，都有自己的地址空间，并占用一定的系统资源。 1.1 ps 查看当前系统进程状态ps:process status 进程状态 基本语法 1.2 kill 终止进程 基本语法 1.3 pstree 查看进程树 基本语法 1.4 top 实时监控系统进程状态 基本命令 1.5 netstat 显示网络状态和端口占用信息 基本语法 1.6 crontab 服务管理 systemctl restart crond (重新启动 crond 服务) 1.7 crontab 定时任务设置 基本语法 "},{"title":"Linux学习-7","date":"2022-10-19T03:28:31.000Z","url":"/2022/10/19/Linux%E5%AD%A6%E4%B9%A0-7/","categories":[["undefined",""]],"content":"1. Linux 磁盘查看和分区类1.1 du 查看文件和目录占用的磁盘空间du: disk usage 磁盘占用情况 基本语法 1.2 df 查看磁盘空间使用情况 df: disk free 空余磁盘 基本语法 1.4 mount/umount 挂载/卸载 对于Linux用户来讲，不论有几个分区，分别分给哪一个目录使用，它总归就是一个根目录、一个独立且唯一的文件结构。 Linux中每个分区都是用来组成整个文件系统的一部分，它在用一种叫做“挂载”的处理方法，它整个文件系统中包含了一整套的文件和目录，并将一个分区和一个目录联系起来，要载入的那个分区将使它的存储空间在这个目录下获得 挂载前准备（必须要有光盘或者已经连接镜像文件） 基本语法 开机自动挂载 vi /etc/fstab 添加红框中内容，保存退出 1.5 fdisk 分区该命令必须在 root 用户下才能使用 基本语法 "},{"title":"Linux学习-6","date":"2022-10-18T08:08:01.000Z","url":"/2022/10/18/Linux%E5%AD%A6%E4%B9%A0-6/","categories":[["undefined",""]],"content":"1. Linux 文件权限1.1 文件属性 Linux系统是一种典型的多用户系统，不同的用户处于不同的地位，拥有不同的权限。为了保护系统的安全性，Linux系统对不同的用户访问同一文件（包括目录文件）的权限做了不同的规定。 在Linux中我们可以使用ll或者ls -l命令来显示一个文件的属性以及文件所属的用户和组 如果没有权限，就会出现减号[ - ]而已。从左至右用0-9这些数字来表示: rwx 作用文件和目录的不同解释 如果查看到是文件：链接数指的是硬链接个数 如果查看的是文件夹：链接数指的是子文件夹个数 1.2 chmod 改变权限 基本语法 1.3 chown 改变所有者 基本语法 1.4 chgrp 改变所属 基本语法 2 搜索查找2.1 find 查找文件或者目录 find 指令将从指定目录向下递归地遍历其各个子目录，将满足条件的文件显示在终端 基本语法 2.2 locate 快速定位文件路径 locate 指令利用事先建立的系统中所有文件名称及路径的 locate 数据库实现快速定位给定的文件。 Locate 指令无需遍历整个文件系统，查询速度较快。为了保证查询结果的准确度，管理员必须定期更新 locate 时刻。 基本语法 2.3 grep 过滤查找及“|”管道符 管道符，“|”，表示将前一个命令的处理结果输出传递给后面的命令处理 基本语法 3. 压缩和解压类3.1 gzip/gunzip 压缩 基本语法 3.2 zip/unzip 压缩 基本语法 3.3 tar 打包 基本语法 "},{"title":"Linux学习-5","date":"2022-10-18T06:51:17.000Z","url":"/2022/10/18/Linux%E5%AD%A6%E4%B9%A0-5/","categories":[["undefined",""]],"content":"1.Linux 用户管理命令1.1 useradd 添加新用户 基本语法 1.2 passwd 设置用户密码 基本语法 1.3 id 查看用户是否存在 基本语法 1.4 cat /etc/passwd 查看创建了哪些用户cat /etc/passwd 1.5 su 切换用户su: swith user 切换用户 基本语法 1.6 userdel 删除用户 基本语法 1.7 who 查看登录用户信息 基本语法 1.8 sudo 设置普通用户具有 root 权限 步骤 1.9 usermod 修改 基本语法 2. 用户组管理命令每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。不同Linux 系统对用户组的规定有所不同，如Linux下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建。用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对/etc/group文件的更新 2.1 groupadd 新增组 基本语法 2.2 groupdel 删除 基本语法 2.3 groupmod 修改组 基本语法 2.4 cat /etc/group 查看创建了哪些组 cat /etc/group"},{"title":"Linux学习-4","date":"2022-10-17T10:09:46.000Z","url":"/2022/10/17/Linux%E5%AD%A6%E4%B9%A0-4/","categories":[["undefined",""]],"content":"//##(28) Linux 常用基本命令 Centos7 默认shell工具是bash 还有tcsh（不是默认的） 1 帮助命令1.1 man获得帮助信息 基本语法 man [命令或配置文件] (获取帮助信息) 信息 功能 NAME 命令的名称和单行描述 SYNOPSIS 怎样使用命令 DESCRIPTION 命令功能的深入讨论 EXAMPLES 怎么使用命令的例子 SEE ALSO 相关主题（手册页） 1.2 help 获得shell内置命令的帮助信息一部分基础功能的系统命令是直接内嵌在 shell 中的，系统加载启动之后会随着 shell 一起加载，常驻系统内存中。这部分命令被称为“内置（built-in）命令”；相应的其它命令被称为“外部命令” 基本语法 help 命令 （获得shell内置命令的帮助信息）help cd (查看cd命令的帮助信息) 常用快捷键 2 文件目录2.1 pwd 显示当前工作目录的绝对路径pwd 全称（print working directory） 打印工作目录 2.2 ls列出目录的内容ls (list) 列出目录内容 基本语法 ls [选项] [目录或是文件] 选项说明 -a (全部文件，连通隐藏（开头为.的文件）一起列出来（常用）) -l (长数据串列出，包含 文件的属性和权限等等数据) 显示说明 每行列出的信息依次是： 文件类型与权限 链接数 文件属主 文件属组 文件大小用byte来表示 建立或最近修改的时间 名字 2.3 cd 切换目录cd ： Change Directory 切换路径 基本语法 cd [参数] 参数说明 参数 功能 cd 绝对路径 切换路径 cd 相对路径 切换路径 cd ~ 或者 cd 回到自己的家目录 cd - 回到上一次所在的目录 cd .. 回到当前目录的上一级目录 cd -P 跳转到实际物理路径，而非快捷方式路径 2.4 mkdir 创建一个新的目录mkdir:Make directory 建立目录 基本语法 mkdir [选项] 选项说明 -p 创建多层目录 2.5 rmdir 删除一个空的rmdir:Remove directory 移除目录 基本语法 rmdir 要删除的空目录 2.6 touch 创建空文件 基本语法 touch 文件名称 2.7 cp 复制文件或目录 基本语法 cp [选项] source dest （复制source文件到dest） 选项说明 -r 递归复制整个文件夹 参数说明 source 源文件 dest 目标文件 2.8 8 rm 删除文件或目录 基本语法 rm [选项] deleteFile （递归删除目录中所有内容) 选项说明 2.9 mv 移动文件与目录或重命名 基本语法 mv oldNameFile newNameFile （功能描述：重命名） mv /temp/movefile /targetFolder （功能描述：移动文件） 2.10 cat 查看文件内容查看文件内容，从第一行开始显示 基本语法 cat [选项] 要查看的文件 选项说明 -n 显示所有行的行号，包括空行 一般查看比较小的文件，一屏幕能显示全的 cat -n 3.txt (查看文件内容并显示行号) 2.11 more 文件内容分屏查看器more 指令是一个基于 VI 编辑器的文本过滤器，它以全屏幕的方式按页显示文本文件的内容。more 指令中内置了若干快捷键 基本语法 more 要查看的 操作说明 2.12 less 分屏显示文件内容less 指令用来分屏查看文件内容，它的功能与 more 指令类似，但是比 more 指令更加强大，支持各种显示终端。less 指令在显示文件内容时，并不是一次将整个文件加载之后才显示，而是根据显示需要加载内容，对于显示大型文件具有较高的效率 基本语法 less 要查看的文件 操作说明 用SecureCRT时[pagedown]和[pageup]可能会出现无法识别的问题 2.13 echo echo 输出内容到控制台 基本语法 echo [选项] 选项 -e 支持反斜线控制的字符转换 2.14 head 显示文件头部内容head 用于显示文件的开头部分内容，默认情况下 head 指令显示文件的前 10 行内容 基本语法 head 文件 （查看文件头10行内容） head -n 5 文件 （查看文件头5行内容，5可以是任意行数 选项说明 -n&lt;行数&gt; 指定显示头部内容的行数 2.15 tail 输出文件尾部内容tail 用于输出文件中尾部的内容，默认情况下 tail 指令显示文件的后 10 行内容 基本语法 选项说明 2.16 &gt; 输出重定向和 &gt;&gt; 追加 （重点） 基本语法 2.17 ln 软链 软链接也称为符号链接，类似于 windows 里的快捷方式，有自己的数据块，主要存放了链接其他文件的路径 基本语法 ln -s [原文件或目录] [软链接名] （给原文件创建一个软链接） 2.18 history 查看已经执行过历史命令 基本语法 history （查看已经执行过历史命令） 3 时间日期类3.1 date 显示当前时间 基本语法 3.2 date 显示非当前时间 基本语法 3.3 date 设置系统时间 基本语法 3.4 cal 查看日历 基本语法 cal [选项] （不加选项，显示本月日历) 选项说明 "},{"title":"Linux学习-3","date":"2022-10-17T06:45:22.000Z","url":"/2022/10/17/Linux%E5%AD%A6%E4%B9%A0-3/","categories":[["undefined",""]],"content":"||win键+空格键 切换输入法 系统管理1 Linux中的进程和服务计算机中，一个正在执行的程序或命令，被叫“进程”（PID）、启动之后一直存在，常驻内存的进程，一般被称为服务 1.1 service服务管理（CentOS6 版本） 基本语法service 服务名 start| stop | restart |status（censtOS7 已经不使用） 查看服务的方法： /etc/init.d/服务名 pwd 查看当前路径 ls -al 查看文件 1.2 chkconfig 设置后台服务的自启配置（CentOS 6版本） 基本语法 开启/关闭 network (网络)服务的自动启动 开启/关闭 network 服务指定级别的自动启动 1.3 systemctl(CentOS 7 版本) 基本语法systemctl start | stop| restart |status 服务名 查看方法 防火墙 1.4 systemctl 设置后台服务的自启配置 基本语法 1.5 系统的运行级别 运行级别 CentOS7 的运行级别简化为： 1.6 关机重启命令 基本语法 – sync (将数据由内存同步到硬盘中) –halt （停机，关闭系统，但不断电） –poweroff（关机，断电） –reboot（重启 等同于 shutdown -r now） shutdown [选项] 时间 选项 功能 -H 相当 –halt，停机 -r -r=reboot 重启 now 立刻关机 时间 等待多久后关机 Linux 系统中为了提高磁盘的读写效率，对磁盘采取了 “预读迟写”操作方式。 当用户保存文件时，Linux 核心并不一定立即将保存数据写入物理磁盘中，而是将数据保存在缓冲区中，等缓冲区满时再写入磁盘，这种方式可以极大的提高磁盘写入数据的效率。 但是，也带来了安全隐患，如果数据还未写入磁盘时，系统掉电或者其他严重问题出现，则将导致数据丢失。 使用 sync 指令可以立即将缓冲区的数据写入磁盘。 "},{"title":"Linux学习-2","date":"2022-10-17T01:50:06.000Z","url":"/2022/10/17/Linux%E5%AD%A6%E4%B9%A0-2/","tags":[["自学","/tags/%E8%87%AA%E5%AD%A6/"]],"categories":[["undefined",""]],"content":"vi/vim 编辑器VI是Unix操作系统和类Unix系统中最通用的文本编辑器VIM编辑器是从VI发展来的一个性能更为强大的文本编辑器。VIM与VI编辑器完全兼容 一般模式以 vi 打开一个档案就直接进入一般模式了（这是默认的模式）。一般模式中， 可使用『上下左右』按键来移动光标，可使用『删除字符』或『删除整行』来处理档案内容， 也可使用『复制、粘贴』来处理文件数据 常用语法 语法 功能描述 yy 复制光标当前一行 y 数字 y 复制一段 （从第几行到第几行） p 箭头移动到目的行粘贴 u 撤销上一步 dd 删除光标当前行 d 数字 d 删除光标（含）后多少行 x 剪切一个字母，相当于del X（大写） 剪切一个字母，相当于BackSpace yw 复制一个词 dw 删除一个词 shift+6（^） 移动到行头 shift+4($) 移动到行尾 1+shift+g 移动到页头，数字 shitf+g 移动到页尾 数字+shift+g 移动到目标行 编辑模式一般模式中可以进行删除、复制、粘贴等的动作，但是却无法编辑文件内容的！在按下『i, I, o, O, a, A』等任何一个字母之后才会进入编辑模式。通常在Linux中，按下这些按键时，在画面的左下方会出现『INSERT或REPLACE』的字样，此时才能进行编辑。而如果要回到一般模式时， 则必须要按下『Esc』这个按键即可退出编辑模式。 常用语法 语法 功能描述 i 当前光标后 a 当前光标前 o 当前光标行的下一行 I 光标所在行最前 A 光标所在行的最后 O 当前光标行的上一行 按『Esc』键 退出编辑模式，之后所在的模式为一般模式。 指令模式在一般模式当中，输入『 : / ?』3个中的任何一个按钮，就可以将光标移动到最底下那一行。在这个模式当中， 可以提供『搜寻资料』的动作，而读取、存盘、大量取代字符、离开 等 常用语法 语法 功能描述 :w 保存 :q 退出 :! 强制执行 /要查询的词 n查找下一个，N往上查找 :noth 取消高亮显示 :set nu 显示行号 :set nonu 关闭行号 :%s/old/new/g 替换内容 /g 替换匹配到的所有内容 模式转化"},{"title":"Linux学习_1","date":"2022-09-28T11:24:38.000Z","url":"/2022/09/28/Linux%E5%AD%A6%E4%B9%A0-1/","tags":[["自学","/tags/%E8%87%AA%E5%AD%A6/"]],"categories":[["undefined",""]],"content":"学习目录 基础 linux安装 文件与目录结构 VI/VIM编辑器 网络配置 系统管理 远程登录 实战 文件目录类 时间日期类 用户管理类 文件权限类 磁盘分区类 进程线程类 扩展 软件包管理 克隆虚拟机 shell编程 Linux是一个操作系统（os）BSD（伯克利分校）（FreeBSD）（1993） Linux 发行版 Red Hat(性能强，稳定)（服务器系统首选） Red Hat Enterprise Linux 文件目录 /bin 是Binary的缩写，此目录存放最经常使用的命令 /sbin s就是Super User 存放系统管理员使用的系统管理程序 /home 存放普通用户的主目录，在liunx中每个用户都有一个自己的目录，一般该目录是以用户的账号命名的 /root 该目录为系统管理员，也称超级权限者的用户主目录 /lib 系统开机所需要最基本的动态连接共享库，类型于window系统的dll文件，几乎所有的应用程序都需要这些共享库 /lost+found 一般情况下这个目录是空的，当系统非法关机后，该目录就会存放一些文件 /etc 所有的系统管理所需要的配置文件和子目录 /usr 用户的很多应用程序和文件都放在这个目录下，类似于windows下program files目录 /boot 存放的是启动Liunx时使用的一些核心文件，包括一些连接文件以及镜像文件（自己的安装别放在这里） /proc 这个目录为虚拟目录，是系统内存的映射，可以通过直接访问这个目录来获取系统的信息 /srv service 缩写 该目录存放一些服务启动后需要提取的数据 /sys 这个Liunx2.6内核的一个很大变化，该目录下安装2.6内核中新出现的一个文件系统sysfs /tmp 存放一些临时文件 /dev 类似windows的设备管理器，把所有的硬件用文件的形式存储 /media(CentOS6) liunx系统会自动识别一些设备，如U盘，光驱等等，当识别后，liunx会把识别的设备挂载到这个目录下CentOS7 迁移到/run/media /mnt 系统提供该目录是为了让用户临时挂载别的文件系统的，可以将外部的存储挂载在/mnt/上，然后进入该目录就可以查看里的内容 /opt 这个给主机额外安装软件所存放的目录，如安装一个mysql就可以放到这个目录下，默认为空 /var 目录中存放不断扩充的东西，习惯性将那些经常被修改的目录放在其中。包括各种日志文件 "},{"title":"Markdowm学习笔记","date":"2022-09-28T06:31:30.000Z","url":"/2022/09/28/Markdowm%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","tags":[["自学","/tags/%E8%87%AA%E5%AD%A6/"]],"categories":[["undefined",""]],"content":"MarkDowm 基础1. 标题#号的个数代表标题的几级 一级标题使用一个#二级标题使用二个#号最多支持六级标题 2. 文字删除线(~~ )(前后各两个波浪号)~~(没啥用)~~ 删除线 ~~ 3. 斜体 文字(前后各一个*号) 4.加粗文字(前后各两个*号加粗) 5.斜体和加粗文字(前后三个*号) 6.下划线HTML语法文字(前后闭合)== == 7. 高亮 8. 下标 9.上标 为了使Markdown更为清晰，| 和-两侧需要至少有一个空格（最左侧和右侧| 外就不需要了） name price friedchicken 19 cola 5 为了美观，可以使用空格对齐不同行的单元格，并在左右两侧都使用|来标记单元格边界，在表头下方的分隔线标记中加入:,即可标记下方的单元格内容的对齐方式： name price friedchicken 19 cola 5 12. 引用 “后悔”（估计用不上） 13. 列表无序列表 符号空格） 无序列表 无序 无序 有序列表 数字. 空格 有序列表以数字和 . 开始 数字的序列并不影响生成的列表序列 但仍然推荐按照自然顺序（1,2,3…）编写 14 代码块代码块 行内代码 15. 分隔线可以在一行中使用三个或更多的*,- 或者_来添加分隔线 16. 跳转格式为[line text][link] 17.自动连接使用&lt;&gt;包括的URL或邮箱地址会自动转换为超链接 htpps:www.baidu.com &#x31;&#50;&#51;&#64;&#103;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#111;&#x6d; 18.图片 添加图片时，先安装 使用 hexo n 文件夹名（md文件同名，把图片文件都放入该文件下） 19.Markdowm画图（需要沟选扩展语法）"},{"title":"test_git","date":"2022-09-26T09:39:52.000Z","url":"/2022/09/26/test-git/","tags":[["测试","/tags/%E6%B5%8B%E8%AF%95/"]],"categories":[["undefined",""]],"content":"开源众包官网 电鸭社区官方网站 码市官方网站 Toptal 官方网站 程序员客栈官网 AngelList 官方网站 猪八戒官网"},{"title":"Hello World","date":"2022-09-26T06:54:35.497Z","url":"/2022/09/26/hello-world/","categories":[["undefined",""]],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"}]